{
  "account": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "description": "An account object.",
        "properties": {
          "account_status": {
            "description": "The status of the account. Currently the only possible value is \"active\", but more values may be added in the future.",
            "type": "string"
          },
          "created_on": {
            "format": "date-time",
            "type": "string"
          },
          "display_name": {
            "type": "string"
          },
          "has_2fa_enabled": {
            "type": "boolean"
          },
          "links": {
            "additionalProperties": false,
            "properties": {
              "avatar": {
                "additionalProperties": false,
                "properties": {
                  "href": {
                    "format": "uri",
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "followers": {
                "additionalProperties": false,
                "properties": {
                  "href": {
                    "format": "uri",
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "following": {
                "additionalProperties": false,
                "properties": {
                  "href": {
                    "format": "uri",
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "html": {
                "additionalProperties": false,
                "properties": {
                  "href": {
                    "format": "uri",
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "repositories": {
                "additionalProperties": false,
                "properties": {
                  "href": {
                    "format": "uri",
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "self": {
                "additionalProperties": false,
                "properties": {
                  "href": {
                    "format": "uri",
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "nickname": {
            "description": "Account name defined by the owner. Should be used instead of the \"username\" field. Note that \"nickname\" cannot be used in place of \"username\" in URLs and queries, as \"nickname\" is not guaranteed to be unique.",
            "type": "string"
          },
          "username": {
            "pattern": "^[a-zA-Z0-9_\\-]+$",
            "type": "string"
          },
          "uuid": {
            "type": "string"
          },
          "website": {
            "type": "string"
          }
        },
        "type": "object"
      }
    ]
  },
  "author": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "description": "The author of a change in a repository",
        "properties": {
          "raw": {
            "description": "The raw author value from the repository. This may be the only value available if the author does not match a user in Bitbucket.",
            "type": "string"
          },
          "user": {
            "$ref": "#/definitions/account"
          }
        },
        "type": "object"
      }
    ]
  },
  "base_commit": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "description": "The common base type for both repository and snippet commits.",
        "properties": {
          "author": {
            "$ref": "#/definitions/author"
          },
          "date": {
            "format": "date-time",
            "type": "string"
          },
          "hash": {
            "pattern": "[0-9a-f]{7,}?",
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "parents": {
            "items": {
              "$ref": "#/definitions/base_commit"
            },
            "minItems": 0,
            "type": "array"
          },
          "summary": {
            "additionalProperties": false,
            "properties": {
              "html": {
                "description": "The user's content rendered as HTML.",
                "type": "string"
              },
              "markup": {
                "description": "The type of markup language the raw content is to be interpreted in.",
                "enum": [
                  "markdown",
                  "creole",
                  "plaintext"
                ],
                "type": "string"
              },
              "raw": {
                "description": "The text as it was typed by a user.",
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      }
    ]
  },
  "branch": {
    "allOf": [
      {
        "$ref": "#/definitions/ref"
      },
      {
        "additionalProperties": true,
        "description": "A branch object, representing a branch in a repository.",
        "properties": {},
        "type": "object"
      }
    ]
  },
  "branching_model": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "description": "A repository's branching model",
        "properties": {
          "branch_types": {
            "description": "The active branch types.",
            "items": {
              "additionalProperties": false,
              "properties": {
                "kind": {
                  "description": "The kind of branch.",
                  "enum": [
                    "feature",
                    "bugfix",
                    "release",
                    "hotfix"
                  ],
                  "type": "string"
                },
                "prefix": {
                  "description": "The prefix for this branch type. A branch with this prefix will be classified as per `kind`. The prefix must be a valid prefix for a branch and must always exist. It cannot be blank, empty or `null`.",
                  "type": "string"
                }
              },
              "required": [
                "kind",
                "prefix"
              ],
              "type": "object"
            },
            "maxItems": 4,
            "minItems": 0,
            "type": "array",
            "uniqueItems": true
          },
          "development": {
            "additionalProperties": false,
            "properties": {
              "branch": {
                "$ref": "#/definitions/branch"
              },
              "name": {
                "description": "Name of the target branch. Will be listed here even when the target branch does not exist. Will be `null` if targeting the main branch and the repository is empty.",
                "type": "string"
              },
              "use_mainbranch": {
                "description": "Indicates if the setting points at an explicit branch (`false`) or tracks the main branch (`true`).",
                "type": "boolean"
              }
            },
            "required": [
              "name",
              "use_mainbranch"
            ],
            "type": "object"
          },
          "production": {
            "additionalProperties": false,
            "properties": {
              "branch": {
                "$ref": "#/definitions/branch"
              },
              "name": {
                "description": "Name of the target branch. Will be listed here even when the target branch does not exist. Will be `null` if targeting the main branch and the repository is empty.",
                "type": "string"
              },
              "use_mainbranch": {
                "description": "Indicates if the setting points at an explicit branch (`false`) or tracks the main branch (`true`).",
                "type": "boolean"
              }
            },
            "required": [
              "name",
              "use_mainbranch"
            ],
            "type": "object"
          }
        },
        "type": "object"
      }
    ]
  },
  "branching_model_settings": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "description": "A repository's branching model settings",
        "properties": {
          "branch_types": {
            "items": {
              "additionalProperties": false,
              "properties": {
                "enabled": {
                  "description": "Whether the branch type is enabled or not. A disabled branch type may contain an invalid `prefix`.",
                  "type": "boolean"
                },
                "kind": {
                  "description": "The kind of the branch type.",
                  "enum": [
                    "feature",
                    "bugfix",
                    "release",
                    "hotfix"
                  ],
                  "type": "string"
                },
                "prefix": {
                  "description": "The prefix for this branch type. A branch with this prefix will be classified as per `kind`. The `prefix` of an enabled branch type must be a valid branch prefix.Additionally, it cannot be blank, empty or `null`. The `prefix` for a disabled branch type can be empty or invalid.",
                  "type": "string"
                }
              },
              "required": [
                "kind"
              ],
              "type": "object"
            },
            "maxItems": 4,
            "minItems": 0,
            "type": "array",
            "uniqueItems": true
          },
          "development": {
            "additionalProperties": false,
            "properties": {
              "is_valid": {
                "description": "Indicates if the configured branch is valid, that is, if the configured branch actually exists currently. Is always `true` when `use_mainbranch` is `true` (even if the main branch does not exist). This field is read-only. This field is ignored when updating/creating settings.",
                "type": "boolean"
              },
              "name": {
                "description": "The configured branch. It must be `null` when `use_mainbranch` is `true`. Otherwise it must be a non-empty value. It is possible for the configured branch to not exist (e.g. it was deleted after the settings are set). In this case `is_valid` will be `false`. The branch must exist when updating/setting the `name` or an error will occur.",
                "type": "string"
              },
              "use_mainbranch": {
                "description": "Indicates if the setting points at an explicit branch (`false`) or tracks the main branch (`true`). When `true` the `name` must be `null` or not provided. When `false` the `name` must contain a non-empty branch name.",
                "type": "boolean"
              }
            },
            "type": "object"
          },
          "links": {
            "additionalProperties": false,
            "properties": {
              "self": {
                "additionalProperties": false,
                "properties": {
                  "href": {
                    "format": "uri",
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "production": {
            "additionalProperties": false,
            "properties": {
              "enabled": {
                "description": "Indicates if branch is enabled or not.",
                "type": "boolean"
              },
              "is_valid": {
                "description": "Indicates if the configured branch is valid, that is, if the configured branch actually exists currently. Is always `true` when `use_mainbranch` is `true` (even if the main branch does not exist). This field is read-only. This field is ignored when updating/creating settings.",
                "type": "boolean"
              },
              "name": {
                "description": "The configured branch. It must be `null` when `use_mainbranch` is `true`. Otherwise it must be a non-empty value. It is possible for the configured branch to not exist (e.g. it was deleted after the settings are set). In this case `is_valid` will be `false`. The branch must exist when updating/setting the `name` or an error will occur.",
                "type": "string"
              },
              "use_mainbranch": {
                "description": "Indicates if the setting points at an explicit branch (`false`) or tracks the main branch (`true`). When `true` the `name` must be `null` or not provided. When `false` the `name` must contain a non-empty branch name.",
                "type": "boolean"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      }
    ]
  },
  "branchrestriction": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "description": "A branch restriction rule.",
        "properties": {
          "branch_match_kind": {
            "description": "Indicates how the restriction is matched against a branch. The default is `glob`.",
            "enum": [
              "branching_model",
              "glob"
            ],
            "type": "string"
          },
          "branch_type": {
            "description": "Apply the restriction to branches of this type. Active when `branch_match_kind` is `branching_model`. The branch type will be calculated using the branching model configured for the repository.",
            "enum": [
              "feature",
              "bugfix",
              "release",
              "hotfix",
              "development",
              "production"
            ],
            "type": "string"
          },
          "groups": {
            "items": {
              "$ref": "#/definitions/group"
            },
            "minItems": 0,
            "type": "array"
          },
          "id": {
            "description": "The branch restriction status' id.",
            "type": "integer"
          },
          "kind": {
            "description": "The type of restriction that is being applied.",
            "enum": [
              "require_tasks_to_be_completed",
              "require_passing_builds_to_merge",
              "force",
              "require_all_dependencies_merged",
              "push",
              "require_approvals_to_merge",
              "enforce_merge_checks",
              "restrict_merges",
              "reset_pullrequest_approvals_on_change",
              "delete"
            ],
            "type": "string"
          },
          "links": {
            "additionalProperties": false,
            "properties": {
              "self": {
                "additionalProperties": false,
                "properties": {
                  "href": {
                    "format": "uri",
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "pattern": {
            "description": "Apply the restriction to branches that match this pattern. Active when `branch_match_kind` is `glob`. Will be empty when `branch_match_kind` is `branching_model`.",
            "type": "string"
          },
          "users": {
            "items": {
              "$ref": "#/definitions/account"
            },
            "minItems": 0,
            "type": "array"
          },
          "value": {
            "description": "Value with kind-specific semantics: \"require_approvals_to_merge\" uses it to require a minimum number of approvals on a PR; \"require_passing_builds_to_merge\" uses it to require a minimum number of passing builds.",
            "type": "integer"
          }
        },
        "required": [
          "kind",
          "branch_match_kind",
          "pattern"
        ],
        "type": "object"
      }
    ]
  },
  "comment": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "description": "The base type for all comments. This type should be considered abstract. Each of the \"commentable\" resources defines its own subtypes (e.g. `issue_comment`).",
        "properties": {
          "content": {
            "additionalProperties": false,
            "properties": {
              "html": {
                "description": "The user's content rendered as HTML.",
                "type": "string"
              },
              "markup": {
                "description": "The type of markup language the raw content is to be interpreted in.",
                "enum": [
                  "markdown",
                  "creole",
                  "plaintext"
                ],
                "type": "string"
              },
              "raw": {
                "description": "The text as it was typed by a user.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "created_on": {
            "format": "date-time",
            "type": "string"
          },
          "deleted": {
            "type": "boolean"
          },
          "id": {
            "type": "integer"
          },
          "inline": {
            "additionalProperties": false,
            "properties": {
              "from": {
                "description": "The comment's anchor line in the old version of the file.",
                "minimum": 1,
                "type": "integer"
              },
              "path": {
                "description": "The path of the file this comment is anchored to.",
                "type": "string"
              },
              "to": {
                "description": "The comment's anchor line in the new version of the file.",
                "minimum": 1,
                "type": "integer"
              }
            },
            "required": [
              "path"
            ],
            "type": "object"
          },
          "links": {
            "additionalProperties": false,
            "properties": {
              "code": {
                "additionalProperties": false,
                "properties": {
                  "href": {
                    "format": "uri",
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "html": {
                "additionalProperties": false,
                "properties": {
                  "href": {
                    "format": "uri",
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "self": {
                "additionalProperties": false,
                "properties": {
                  "href": {
                    "format": "uri",
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "parent": {
            "$ref": "#/definitions/comment"
          },
          "updated_on": {
            "format": "date-time",
            "type": "string"
          },
          "user": {
            "$ref": "#/definitions/user"
          }
        },
        "type": "object"
      }
    ]
  },
  "commit": {
    "allOf": [
      {
        "$ref": "#/definitions/base_commit"
      },
      {
        "additionalProperties": true,
        "description": "A repository commit object.",
        "properties": {
          "participants": {
            "items": {
              "$ref": "#/definitions/participant"
            },
            "minItems": 0,
            "type": "array"
          },
          "repository": {
            "$ref": "#/definitions/repository"
          }
        },
        "type": "object"
      }
    ]
  },
  "commit_comment": {
    "allOf": [
      {
        "$ref": "#/definitions/comment"
      },
      {
        "additionalProperties": true,
        "description": "A commit comment.",
        "properties": {
          "commit": {
            "$ref": "#/definitions/commit"
          }
        },
        "type": "object"
      }
    ]
  },
  "commit_file": {
    "additionalProperties": true,
    "description": "A file object, representing a file at a commit in a repository",
    "properties": {
      "attributes": {
        "enum": [
          "link",
          "executable",
          "subrepository",
          "binary",
          "lfs"
        ],
        "type": "string"
      },
      "commit": {
        "$ref": "#/definitions/commit"
      },
      "path": {
        "description": "The path in the repository",
        "type": "string"
      },
      "type": {
        "type": "string"
      }
    },
    "required": [
      "type"
    ],
    "type": "object"
  },
  "commitstatus": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "description": "A commit status object.",
        "properties": {
          "created_on": {
            "format": "date-time",
            "type": "string"
          },
          "description": {
            "description": "A description of the build (e.g. \"Unit tests in Bamboo\")",
            "type": "string"
          },
          "key": {
            "description": "An identifier for the status that's unique to\n        its type (current \"build\" is the only supported type) and the vendor,\n        e.g. BB-DEPLOY",
            "type": "string"
          },
          "links": {
            "additionalProperties": false,
            "properties": {
              "commit": {
                "additionalProperties": false,
                "properties": {
                  "href": {
                    "format": "uri",
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "self": {
                "additionalProperties": false,
                "properties": {
                  "href": {
                    "format": "uri",
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "name": {
            "description": "An identifier for the build itself, e.g. BB-DEPLOY-1",
            "type": "string"
          },
          "refname": {
            "description": "\nThe name of the ref that pointed to this commit at the time the status\nobject was created. Note that this the ref may since have moved off of\nthe commit. This optional field can be useful for build systems whose\nbuild triggers and configuration are branch-dependent (e.g. a Pipeline\nbuild).\nIt is legitimate for this field to not be set, or even apply (e.g. a\nstatic linting job).",
            "type": "string"
          },
          "state": {
            "description": "Provides some indication of the status of this commit",
            "enum": [
              "SUCCESSFUL",
              "FAILED",
              "INPROGRESS",
              "STOPPED"
            ],
            "type": "string"
          },
          "updated_on": {
            "format": "date-time",
            "type": "string"
          },
          "url": {
            "description": "A URL linking back to the vendor or build system, for providing more information about whatever process produced this status. Accepts context variables `repository` and `commit` that Bitbucket will evaluate at runtime whenever at runtime. For example, one could use https://foo.com/builds/{repository.full_name} which Bitbucket will turn into https://foo.com/builds/foo/bar at render time.",
            "type": "string"
          },
          "uuid": {
            "description": "The commit status' id.",
            "type": "string"
          }
        },
        "type": "object"
      }
    ]
  },
  "component": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "description": "A component as defined in a repository's issue tracker.",
        "properties": {
          "id": {
            "type": "integer"
          },
          "links": {
            "additionalProperties": false,
            "properties": {
              "self": {
                "additionalProperties": false,
                "properties": {
                  "href": {
                    "format": "uri",
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      }
    ]
  },
  "deploy_key": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "description": "Represents deploy key for a repository.",
        "properties": {
          "added_on": {
            "format": "date-time",
            "type": "string"
          },
          "comment": {
            "description": "The comment parsed from the deploy key (if present)",
            "type": "string"
          },
          "key": {
            "description": "The deploy key value.",
            "type": "string"
          },
          "label": {
            "description": "The user-defined label for the deploy key",
            "type": "string"
          },
          "last_used": {
            "format": "date-time",
            "type": "string"
          },
          "links": {
            "additionalProperties": false,
            "properties": {
              "self": {
                "additionalProperties": false,
                "properties": {
                  "href": {
                    "format": "uri",
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "owner": {
            "$ref": "#/definitions/account"
          },
          "repository": {
            "$ref": "#/definitions/repository"
          }
        },
        "type": "object"
      }
    ]
  },
  "deployment": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "description": "A Bitbucket Deployment.",
        "properties": {
          "environment": {
            "$ref": "#/definitions/deployment_environment",
            "description": "A deployment environment."
          },
          "release": {
            "$ref": "#/definitions/deployment_release",
            "description": "The release associated with this deployment."
          },
          "state": {
            "$ref": "#/definitions/deployment_state"
          },
          "uuid": {
            "description": "The UUID identifying the deployment.",
            "type": "string"
          }
        },
        "type": "object"
      }
    ]
  },
  "deployment_environment": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "description": "A Bitbucket Deployment Environment.",
        "properties": {
          "name": {
            "description": "The name of the environment.",
            "type": "string"
          },
          "uuid": {
            "description": "The UUID identifying the environment.",
            "type": "string"
          }
        },
        "type": "object"
      }
    ]
  },
  "deployment_release": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "description": "A Bitbucket Deployment Release.",
        "properties": {
          "commit": {
            "$ref": "#/definitions/commit",
            "description": "The commit associated with this release."
          },
          "created_on": {
            "description": "The timestamp when the release was created.",
            "format": "date-time",
            "type": "string"
          },
          "name": {
            "description": "The name of the release.",
            "type": "string"
          },
          "url": {
            "description": "Link to the pipeline that produced the release.",
            "format": "uri",
            "type": "string"
          },
          "uuid": {
            "description": "The UUID identifying the release.",
            "type": "string"
          }
        },
        "type": "object"
      }
    ]
  },
  "deployment_state": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "description": "The representation of the progress state of a deployment.",
        "properties": {},
        "type": "object"
      }
    ]
  },
  "deployment_state_completed": {
    "allOf": [
      {
        "$ref": "#/definitions/deployment_state"
      },
      {
        "additionalProperties": true,
        "description": "A Bitbucket Deployment COMPLETED deployment state.",
        "properties": {
          "completion_date": {
            "description": "The timestamp when the deployment completed.",
            "format": "date-time",
            "type": "string"
          },
          "deployer": {
            "$ref": "#/definitions/account",
            "description": "The Bitbucket account that was used to perform the deployment."
          },
          "name": {
            "description": "The name of deployment state (COMPLETED).",
            "enum": [
              "COMPLETED"
            ],
            "type": "string"
          },
          "start_date": {
            "description": "The timestamp when the deployment was started.",
            "format": "date-time",
            "type": "string"
          },
          "status": {
            "$ref": "#/definitions/deployment_state_completed_status",
            "description": "The status of the completed deployment."
          },
          "url": {
            "description": "Link to the deployment result.",
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      }
    ]
  },
  "deployment_state_completed_status": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "description": "The status of a completed deployment.",
        "properties": {},
        "type": "object"
      }
    ]
  },
  "deployment_state_completed_status_failed": {
    "allOf": [
      {
        "$ref": "#/definitions/deployment_state_completed_status"
      },
      {
        "additionalProperties": true,
        "description": "A FAILED completed deployment status.",
        "properties": {
          "name": {
            "description": "The name of the completed deployment status (FAILED).",
            "enum": [
              "FAILED"
            ],
            "type": "string"
          }
        },
        "type": "object"
      }
    ]
  },
  "deployment_state_completed_status_stopped": {
    "allOf": [
      {
        "$ref": "#/definitions/deployment_state_completed_status"
      },
      {
        "additionalProperties": true,
        "description": "A STOPPED completed deployment status.",
        "properties": {
          "name": {
            "description": "The name of the completed deployment status (STOPPED).",
            "enum": [
              "STOPPED"
            ],
            "type": "string"
          }
        },
        "type": "object"
      }
    ]
  },
  "deployment_state_completed_status_successful": {
    "allOf": [
      {
        "$ref": "#/definitions/deployment_state_completed_status"
      },
      {
        "additionalProperties": true,
        "description": "A SUCCESSFUL completed deployment status.",
        "properties": {
          "name": {
            "description": "The name of the completed deployment status (SUCCESSFUL).",
            "enum": [
              "SUCCESSFUL"
            ],
            "type": "string"
          }
        },
        "type": "object"
      }
    ]
  },
  "deployment_state_in_progress": {
    "allOf": [
      {
        "$ref": "#/definitions/deployment_state"
      },
      {
        "additionalProperties": true,
        "description": "A Bitbucket Deployment IN_PROGRESS deployment state.",
        "properties": {
          "deployer": {
            "$ref": "#/definitions/account",
            "description": "The Bitbucket account that was used to perform the deployment."
          },
          "name": {
            "description": "The name of deployment state (IN_PROGRESS).",
            "enum": [
              "IN_PROGRESS"
            ],
            "type": "string"
          },
          "start_date": {
            "description": "The timestamp when the deployment was started.",
            "format": "date-time",
            "type": "string"
          },
          "url": {
            "description": "Link to the deployment result.",
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      }
    ]
  },
  "deployment_state_undeployed": {
    "allOf": [
      {
        "$ref": "#/definitions/deployment_state"
      },
      {
        "additionalProperties": true,
        "description": "A Bitbucket Deployment UNDEPLOYED deployment state.",
        "properties": {
          "name": {
            "description": "The name of deployment state (UNDEPLOYED).",
            "enum": [
              "UNDEPLOYED"
            ],
            "type": "string"
          },
          "trigger_url": {
            "description": "Link to trigger the deployment.",
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      }
    ]
  },
  "diffstat": {
    "additionalProperties": true,
    "description": "A diffstat object that includes a summary of changes made to a file between two commits.",
    "properties": {
      "lines_added": {
        "type": "integer"
      },
      "lines_removed": {
        "type": "integer"
      },
      "new": {
        "$ref": "#/definitions/commit_file"
      },
      "old": {
        "$ref": "#/definitions/commit_file"
      },
      "status": {
        "enum": [
          "added",
          "removed",
          "modified",
          "renamed"
        ],
        "type": "string"
      },
      "type": {
        "type": "string"
      }
    },
    "required": [
      "type"
    ],
    "type": "object"
  },
  "error": {
    "additionalProperties": true,
    "description": "Base type for most resource objects. It defines the common `type` element that identifies an object's type. It also identifies the element as Swagger's `discriminator`.",
    "properties": {
      "error": {
        "additionalProperties": false,
        "properties": {
          "data": {
            "additionalProperties": true,
            "description": "Optional structured data that is endpoint-specific.",
            "properties": {},
            "type": "object"
          },
          "detail": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        },
        "required": [
          "message"
        ],
        "type": "object"
      },
      "type": {
        "type": "string"
      }
    },
    "required": [
      "type"
    ],
    "type": "object"
  },
  "group": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "description": "A group object",
        "properties": {
          "full_slug": {
            "description": "The concatenation of the owner's username and the group's slug,\nseparated with a colon (e.g. `acme:developers`)\n",
            "type": "string"
          },
          "links": {
            "additionalProperties": false,
            "properties": {
              "html": {
                "additionalProperties": false,
                "properties": {
                  "href": {
                    "format": "uri",
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "self": {
                "additionalProperties": false,
                "properties": {
                  "href": {
                    "format": "uri",
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "members": {
            "description": "The number of members in this group",
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "owner": {
            "$ref": "#/definitions/account"
          },
          "slug": {
            "description": "The \"sluggified\" version of the group's name. This contains only ASCII\ncharacters and can therefore be slightly different than the name",
            "type": "string"
          }
        },
        "type": "object"
      }
    ]
  },
  "hook_event": {
    "additionalProperties": false,
    "description": "An event, associated with a resource or subject type.",
    "properties": {
      "category": {
        "description": "The category this event belongs to.",
        "type": "string"
      },
      "description": {
        "description": "More detailed description of the webhook event type.",
        "type": "string"
      },
      "event": {
        "description": "The event identifier.",
        "enum": [
          "pullrequest:unapproved",
          "issue:comment_created",
          "pullrequest:approved",
          "repo:created",
          "repo:deleted",
          "repo:imported",
          "pullrequest:comment_updated",
          "issue:updated",
          "project:updated",
          "pullrequest:comment_created",
          "repo:commit_status_updated",
          "pullrequest:updated",
          "issue:created",
          "repo:fork",
          "pullrequest:comment_deleted",
          "repo:commit_status_created",
          "repo:updated",
          "pullrequest:rejected",
          "pullrequest:fulfilled",
          "repo:push",
          "pullrequest:created",
          "repo:transfer",
          "repo:commit_comment_created"
        ],
        "type": "string"
      },
      "label": {
        "description": "Summary of the webhook event type.",
        "type": "string"
      }
    },
    "type": "object"
  },
  "issue": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "description": "An issue.",
        "properties": {
          "assignee": {
            "$ref": "#/definitions/user"
          },
          "component": {
            "$ref": "#/definitions/component"
          },
          "content": {
            "additionalProperties": false,
            "properties": {
              "html": {
                "description": "The user's content rendered as HTML.",
                "type": "string"
              },
              "markup": {
                "description": "The type of markup language the raw content is to be interpreted in.",
                "enum": [
                  "markdown",
                  "creole",
                  "plaintext"
                ],
                "type": "string"
              },
              "raw": {
                "description": "The text as it was typed by a user.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "created_on": {
            "format": "date-time",
            "type": "string"
          },
          "edited_on": {
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "kind": {
            "enum": [
              "bug",
              "enhancement",
              "proposal",
              "task"
            ],
            "type": "string"
          },
          "links": {
            "additionalProperties": false,
            "properties": {
              "attachments": {
                "additionalProperties": false,
                "properties": {
                  "href": {
                    "format": "uri",
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "comments": {
                "additionalProperties": false,
                "properties": {
                  "href": {
                    "format": "uri",
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "html": {
                "additionalProperties": false,
                "properties": {
                  "href": {
                    "format": "uri",
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "self": {
                "additionalProperties": false,
                "properties": {
                  "href": {
                    "format": "uri",
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "vote": {
                "additionalProperties": false,
                "properties": {
                  "href": {
                    "format": "uri",
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "watch": {
                "additionalProperties": false,
                "properties": {
                  "href": {
                    "format": "uri",
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "milestone": {
            "$ref": "#/definitions/milestone"
          },
          "priority": {
            "enum": [
              "trivial",
              "minor",
              "major",
              "critical",
              "blocker"
            ],
            "type": "string"
          },
          "reporter": {
            "$ref": "#/definitions/user"
          },
          "repository": {
            "$ref": "#/definitions/repository"
          },
          "state": {
            "enum": [
              "new",
              "open",
              "resolved",
              "on hold",
              "invalid",
              "duplicate",
              "wontfix",
              "closed"
            ],
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "updated_on": {
            "format": "date-time",
            "type": "string"
          },
          "version": {
            "$ref": "#/definitions/version"
          },
          "votes": {
            "type": "integer"
          }
        },
        "type": "object"
      }
    ]
  },
  "issue_attachment": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "description": "An issue file attachment's meta data. Note this does not contain the file's actual contents.",
        "properties": {
          "links": {
            "additionalProperties": false,
            "properties": {
              "self": {
                "additionalProperties": false,
                "properties": {
                  "href": {
                    "format": "uri",
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      }
    ]
  },
  "issue_change": {
    "additionalProperties": true,
    "description": "An issue change.",
    "properties": {
      "changes": {
        "additionalProperties": false,
        "properties": {
          "assignee": {
            "additionalProperties": false,
            "properties": {
              "new": {
                "type": "string"
              },
              "old": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "component": {
            "additionalProperties": false,
            "properties": {
              "new": {
                "type": "string"
              },
              "old": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "content": {
            "additionalProperties": false,
            "properties": {
              "new": {
                "type": "string"
              },
              "old": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "kind": {
            "additionalProperties": false,
            "properties": {
              "new": {
                "type": "string"
              },
              "old": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "milestone": {
            "additionalProperties": false,
            "properties": {
              "new": {
                "type": "string"
              },
              "old": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "priority": {
            "additionalProperties": false,
            "properties": {
              "new": {
                "type": "string"
              },
              "old": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "state": {
            "additionalProperties": false,
            "properties": {
              "new": {
                "type": "string"
              },
              "old": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "title": {
            "additionalProperties": false,
            "properties": {
              "new": {
                "type": "string"
              },
              "old": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "version": {
            "additionalProperties": false,
            "properties": {
              "new": {
                "type": "string"
              },
              "old": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "created_on": {
        "format": "date-time",
        "type": "string"
      },
      "issue": {
        "$ref": "#/definitions/issue"
      },
      "links": {
        "additionalProperties": false,
        "properties": {
          "issue": {
            "additionalProperties": false,
            "properties": {
              "href": {
                "format": "uri",
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "self": {
            "additionalProperties": false,
            "properties": {
              "href": {
                "format": "uri",
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "message": {
        "additionalProperties": false,
        "properties": {
          "html": {
            "description": "The user's content rendered as HTML.",
            "type": "string"
          },
          "markup": {
            "description": "The type of markup language the raw content is to be interpreted in.",
            "enum": [
              "markdown",
              "creole",
              "plaintext"
            ],
            "type": "string"
          },
          "raw": {
            "description": "The text as it was typed by a user.",
            "type": "string"
          }
        },
        "type": "object"
      },
      "name": {
        "type": "string"
      },
      "type": {
        "type": "string"
      },
      "user": {
        "$ref": "#/definitions/user"
      }
    },
    "required": [
      "type"
    ],
    "type": "object"
  },
  "issue_comment": {
    "allOf": [
      {
        "$ref": "#/definitions/comment"
      },
      {
        "additionalProperties": true,
        "description": "A issue comment.",
        "properties": {
          "issue": {
            "$ref": "#/definitions/issue"
          }
        },
        "type": "object"
      }
    ]
  },
  "issue_job_status": {
    "additionalProperties": false,
    "description": "The status of an import or export job",
    "properties": {
      "count": {
        "description": "The total number of issues already imported/exported",
        "type": "integer"
      },
      "pct": {
        "description": "The percentage of issues already imported/exported",
        "maximum": 100,
        "minimum": 0,
        "type": "number"
      },
      "phase": {
        "description": "The phase of the import/export job",
        "type": "string"
      },
      "status": {
        "description": "The status of the import/export job",
        "enum": [
          "ACCEPTED",
          "STARTED",
          "RUNNING",
          "FAILURE"
        ],
        "type": "string"
      },
      "total": {
        "description": "The total number of issues being imported/exported",
        "type": "integer"
      },
      "type": {
        "type": "string"
      }
    },
    "type": "object"
  },
  "milestone": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "description": "A milestone as defined in a repository's issue tracker.",
        "properties": {
          "id": {
            "type": "integer"
          },
          "links": {
            "additionalProperties": false,
            "properties": {
              "self": {
                "additionalProperties": false,
                "properties": {
                  "href": {
                    "format": "uri",
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      }
    ]
  },
  "object": {
    "additionalProperties": true,
    "description": "Base type for most resource objects. It defines the common `type` element that identifies an object's type. It also identifies the element as Swagger's `discriminator`.",
    "discriminator": "type",
    "properties": {
      "type": {
        "type": "string"
      }
    },
    "required": [
      "type"
    ],
    "type": "object"
  },
  "page": {
    "additionalProperties": false,
    "properties": {
      "next": {
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "page": {
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "minimum": 1,
        "type": "integer"
      },
      "pagelen": {
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "minimum": 1,
        "type": "integer"
      },
      "previous": {
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "size": {
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "minimum": 0,
        "type": "integer"
      }
    },
    "type": "object"
  },
  "paginated_branches": {
    "additionalProperties": false,
    "description": "A paginated list of branches.",
    "properties": {
      "next": {
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "page": {
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "minimum": 1,
        "type": "integer"
      },
      "pagelen": {
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "minimum": 1,
        "type": "integer"
      },
      "previous": {
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "size": {
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "minimum": 0,
        "type": "integer"
      },
      "values": {
        "items": {
          "$ref": "#/definitions/branch"
        },
        "minItems": 0,
        "type": "array",
        "uniqueItems": true
      }
    },
    "type": "object"
  },
  "paginated_branchrestrictions": {
    "additionalProperties": false,
    "description": "A paginated list of branch restriction rules.",
    "properties": {
      "next": {
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "page": {
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "minimum": 1,
        "type": "integer"
      },
      "pagelen": {
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "minimum": 1,
        "type": "integer"
      },
      "previous": {
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "size": {
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "minimum": 0,
        "type": "integer"
      },
      "values": {
        "items": {
          "$ref": "#/definitions/branchrestriction"
        },
        "minItems": 0,
        "type": "array",
        "uniqueItems": true
      }
    },
    "type": "object"
  },
  "paginated_commit_comments": {
    "additionalProperties": false,
    "description": "A paginated list of commit comments.",
    "properties": {
      "next": {
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "page": {
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "minimum": 1,
        "type": "integer"
      },
      "pagelen": {
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "minimum": 1,
        "type": "integer"
      },
      "previous": {
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "size": {
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "minimum": 0,
        "type": "integer"
      },
      "values": {
        "items": {
          "$ref": "#/definitions/commit_comment"
        },
        "minItems": 0,
        "type": "array",
        "uniqueItems": true
      }
    },
    "type": "object"
  },
  "paginated_commitstatuses": {
    "additionalProperties": false,
    "description": "A paginated list of commit status objects.",
    "properties": {
      "next": {
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "page": {
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "minimum": 1,
        "type": "integer"
      },
      "pagelen": {
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "minimum": 1,
        "type": "integer"
      },
      "previous": {
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "size": {
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "minimum": 0,
        "type": "integer"
      },
      "values": {
        "items": {
          "$ref": "#/definitions/commitstatus"
        },
        "minItems": 0,
        "type": "array",
        "uniqueItems": true
      }
    },
    "type": "object"
  },
  "paginated_components": {
    "additionalProperties": false,
    "description": "A paginated list of issue tracker components.",
    "properties": {
      "next": {
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "page": {
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "minimum": 1,
        "type": "integer"
      },
      "pagelen": {
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "minimum": 1,
        "type": "integer"
      },
      "previous": {
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "size": {
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "minimum": 0,
        "type": "integer"
      },
      "values": {
        "items": {
          "$ref": "#/definitions/component"
        },
        "minItems": 0,
        "type": "array",
        "uniqueItems": true
      }
    },
    "type": "object"
  },
  "paginated_deploy_keys": {
    "additionalProperties": false,
    "description": "A paginated list of deploy keys.",
    "properties": {
      "next": {
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "page": {
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "minimum": 1,
        "type": "integer"
      },
      "pagelen": {
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "minimum": 1,
        "type": "integer"
      },
      "previous": {
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "size": {
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "minimum": 0,
        "type": "integer"
      },
      "values": {
        "items": {
          "$ref": "#/definitions/deploy_key"
        },
        "minItems": 0,
        "type": "array",
        "uniqueItems": true
      }
    },
    "type": "object"
  },
  "paginated_deployments": {
    "description": "A paged list of deployments",
    "properties": {
      "next": {
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "page": {
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "type": "integer"
      },
      "pagelen": {
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "type": "integer"
      },
      "previous": {
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "size": {
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "type": "integer"
      },
      "values": {
        "description": "The values of the current page.",
        "items": {
          "$ref": "#/definitions/deployment"
        },
        "minItems": 0,
        "type": "array"
      }
    },
    "type": "object"
  },
  "paginated_diffstats": {
    "additionalProperties": false,
    "description": "A paginated list of diffstats.",
    "properties": {
      "next": {
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "page": {
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "minimum": 1,
        "type": "integer"
      },
      "pagelen": {
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "minimum": 1,
        "type": "integer"
      },
      "previous": {
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "size": {
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "minimum": 0,
        "type": "integer"
      },
      "values": {
        "items": {
          "$ref": "#/definitions/diffstat"
        },
        "minItems": 0,
        "type": "array",
        "uniqueItems": true
      }
    },
    "type": "object"
  },
  "paginated_environments": {
    "description": "A paged list of environments",
    "properties": {
      "next": {
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "page": {
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "type": "integer"
      },
      "pagelen": {
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "type": "integer"
      },
      "previous": {
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "size": {
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "type": "integer"
      },
      "values": {
        "description": "The values of the current page.",
        "items": {
          "$ref": "#/definitions/deployment_environment"
        },
        "minItems": 0,
        "type": "array"
      }
    },
    "type": "object"
  },
  "paginated_files": {
    "additionalProperties": false,
    "description": "A paginated list of commit_file objects.",
    "properties": {
      "next": {
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "page": {
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "minimum": 1,
        "type": "integer"
      },
      "pagelen": {
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "minimum": 1,
        "type": "integer"
      },
      "previous": {
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "size": {
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "minimum": 0,
        "type": "integer"
      },
      "values": {
        "items": {
          "$ref": "#/definitions/commit_file"
        },
        "minItems": 0,
        "type": "array",
        "uniqueItems": true
      }
    },
    "type": "object"
  },
  "paginated_hook_events": {
    "additionalProperties": false,
    "description": "A paginated list of webhook types available to subscribe on.",
    "properties": {
      "next": {
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "page": {
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "minimum": 1,
        "type": "integer"
      },
      "pagelen": {
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "minimum": 1,
        "type": "integer"
      },
      "previous": {
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "size": {
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "minimum": 0,
        "type": "integer"
      },
      "values": {
        "items": {
          "$ref": "#/definitions/hook_event"
        },
        "minItems": 0,
        "type": "array",
        "uniqueItems": true
      }
    },
    "type": "object"
  },
  "paginated_issue_attachments": {
    "additionalProperties": false,
    "description": "A paginated list of issue attachments.",
    "properties": {
      "next": {
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "page": {
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "minimum": 1,
        "type": "integer"
      },
      "pagelen": {
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "minimum": 1,
        "type": "integer"
      },
      "previous": {
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "size": {
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "minimum": 0,
        "type": "integer"
      },
      "values": {
        "items": {
          "$ref": "#/definitions/issue_attachment"
        },
        "minItems": 0,
        "type": "array"
      }
    },
    "type": "object"
  },
  "paginated_issue_comments": {
    "additionalProperties": false,
    "description": "A paginated list of issue comments.",
    "properties": {
      "next": {
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "page": {
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "minimum": 1,
        "type": "integer"
      },
      "pagelen": {
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "minimum": 1,
        "type": "integer"
      },
      "previous": {
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "size": {
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "minimum": 0,
        "type": "integer"
      },
      "values": {
        "items": {
          "$ref": "#/definitions/issue_comment"
        },
        "minItems": 0,
        "type": "array",
        "uniqueItems": true
      }
    },
    "type": "object"
  },
  "paginated_issues": {
    "additionalProperties": false,
    "description": "A paginated list of issues.",
    "properties": {
      "next": {
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "page": {
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "minimum": 1,
        "type": "integer"
      },
      "pagelen": {
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "minimum": 1,
        "type": "integer"
      },
      "previous": {
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "size": {
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "minimum": 0,
        "type": "integer"
      },
      "values": {
        "items": {
          "$ref": "#/definitions/issue"
        },
        "minItems": 0,
        "type": "array",
        "uniqueItems": true
      }
    },
    "type": "object"
  },
  "paginated_log_entries": {
    "additionalProperties": false,
    "description": "A paginated list of issue changes.",
    "properties": {
      "next": {
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "page": {
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "minimum": 1,
        "type": "integer"
      },
      "pagelen": {
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "minimum": 1,
        "type": "integer"
      },
      "previous": {
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "size": {
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "minimum": 0,
        "type": "integer"
      },
      "values": {
        "items": {
          "$ref": "#/definitions/issue_change"
        },
        "minItems": 0,
        "type": "array"
      }
    },
    "type": "object"
  },
  "paginated_milestones": {
    "additionalProperties": false,
    "description": "A paginated list of issue tracker milestones.",
    "properties": {
      "next": {
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "page": {
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "minimum": 1,
        "type": "integer"
      },
      "pagelen": {
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "minimum": 1,
        "type": "integer"
      },
      "previous": {
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "size": {
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "minimum": 0,
        "type": "integer"
      },
      "values": {
        "items": {
          "$ref": "#/definitions/milestone"
        },
        "minItems": 0,
        "type": "array",
        "uniqueItems": true
      }
    },
    "type": "object"
  },
  "paginated_pipeline_known_hosts": {
    "description": "A paged list of known hosts.",
    "properties": {
      "next": {
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "page": {
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "type": "integer"
      },
      "pagelen": {
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "type": "integer"
      },
      "previous": {
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "size": {
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "type": "integer"
      },
      "values": {
        "description": "The values of the current page.",
        "items": {
          "$ref": "#/definitions/pipeline_known_host"
        },
        "minItems": 0,
        "type": "array"
      }
    },
    "type": "object"
  },
  "paginated_pipeline_schedule_executions": {
    "description": "A paged list of the executions of a schedule.",
    "properties": {
      "next": {
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "page": {
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "type": "integer"
      },
      "pagelen": {
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "type": "integer"
      },
      "previous": {
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "size": {
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "type": "integer"
      },
      "values": {
        "description": "The values of the current page.",
        "items": {
          "$ref": "#/definitions/pipeline_schedule_execution"
        },
        "minItems": 0,
        "type": "array"
      }
    },
    "type": "object"
  },
  "paginated_pipeline_schedules": {
    "description": "A paged list of schedules",
    "properties": {
      "next": {
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "page": {
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "type": "integer"
      },
      "pagelen": {
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "type": "integer"
      },
      "previous": {
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "size": {
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "type": "integer"
      },
      "values": {
        "description": "The values of the current page.",
        "items": {
          "$ref": "#/definitions/pipeline_schedule"
        },
        "minItems": 0,
        "type": "array"
      }
    },
    "type": "object"
  },
  "paginated_pipeline_steps": {
    "description": "A paged list of pipeline steps.",
    "properties": {
      "next": {
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "page": {
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "type": "integer"
      },
      "pagelen": {
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "type": "integer"
      },
      "previous": {
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "size": {
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "type": "integer"
      },
      "values": {
        "description": "The values of the current page.",
        "items": {
          "$ref": "#/definitions/pipeline_step"
        },
        "minItems": 0,
        "type": "array"
      }
    },
    "type": "object"
  },
  "paginated_pipeline_variables": {
    "description": "A paged list of variables.",
    "properties": {
      "next": {
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "page": {
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "type": "integer"
      },
      "pagelen": {
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "type": "integer"
      },
      "previous": {
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "size": {
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "type": "integer"
      },
      "values": {
        "description": "The values of the current page.",
        "items": {
          "$ref": "#/definitions/pipeline_variable"
        },
        "minItems": 0,
        "type": "array"
      }
    },
    "type": "object"
  },
  "paginated_pipelines": {
    "description": "A paged list of pipelines",
    "properties": {
      "next": {
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "page": {
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "type": "integer"
      },
      "pagelen": {
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "type": "integer"
      },
      "previous": {
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "size": {
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "type": "integer"
      },
      "values": {
        "description": "The values of the current page.",
        "items": {
          "$ref": "#/definitions/pipeline"
        },
        "minItems": 0,
        "type": "array"
      }
    },
    "type": "object"
  },
  "paginated_projects": {
    "additionalProperties": false,
    "description": "A paginated list of projects",
    "properties": {
      "next": {
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "page": {
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "minimum": 1,
        "type": "integer"
      },
      "pagelen": {
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "minimum": 1,
        "type": "integer"
      },
      "previous": {
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "size": {
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "minimum": 0,
        "type": "integer"
      },
      "values": {
        "items": {
          "$ref": "#/definitions/project"
        },
        "minItems": 0,
        "type": "array",
        "uniqueItems": true
      }
    },
    "type": "object"
  },
  "paginated_pullrequest_comments": {
    "additionalProperties": false,
    "description": "A paginated list of pullrequest comments.",
    "properties": {
      "next": {
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "page": {
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "minimum": 1,
        "type": "integer"
      },
      "pagelen": {
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "minimum": 1,
        "type": "integer"
      },
      "previous": {
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "size": {
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "minimum": 0,
        "type": "integer"
      },
      "values": {
        "items": {
          "$ref": "#/definitions/pullrequest_comment"
        },
        "minItems": 0,
        "type": "array",
        "uniqueItems": true
      }
    },
    "type": "object"
  },
  "paginated_pullrequests": {
    "additionalProperties": false,
    "description": "A paginated list of pullrequests.",
    "properties": {
      "next": {
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "page": {
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "minimum": 1,
        "type": "integer"
      },
      "pagelen": {
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "minimum": 1,
        "type": "integer"
      },
      "previous": {
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "size": {
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "minimum": 0,
        "type": "integer"
      },
      "values": {
        "items": {
          "$ref": "#/definitions/pullrequest"
        },
        "minItems": 0,
        "type": "array",
        "uniqueItems": true
      }
    },
    "type": "object"
  },
  "paginated_refs": {
    "additionalProperties": false,
    "description": "A paginated list of refs.",
    "properties": {
      "next": {
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "page": {
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "minimum": 1,
        "type": "integer"
      },
      "pagelen": {
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "minimum": 1,
        "type": "integer"
      },
      "previous": {
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "size": {
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "minimum": 0,
        "type": "integer"
      },
      "values": {
        "items": {
          "$ref": "#/definitions/ref"
        },
        "minItems": 0,
        "type": "array",
        "uniqueItems": true
      }
    },
    "type": "object"
  },
  "paginated_repositories": {
    "additionalProperties": false,
    "description": "A paginated list of repositories.",
    "properties": {
      "next": {
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "page": {
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "minimum": 1,
        "type": "integer"
      },
      "pagelen": {
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "minimum": 1,
        "type": "integer"
      },
      "previous": {
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "size": {
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "minimum": 0,
        "type": "integer"
      },
      "values": {
        "items": {
          "$ref": "#/definitions/repository"
        },
        "minItems": 0,
        "type": "array",
        "uniqueItems": true
      }
    },
    "type": "object"
  },
  "paginated_repository_permissions": {
    "additionalProperties": false,
    "description": "A paginated list of repository permissions.",
    "properties": {
      "next": {
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "page": {
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "minimum": 1,
        "type": "integer"
      },
      "pagelen": {
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "minimum": 1,
        "type": "integer"
      },
      "previous": {
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "size": {
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "minimum": 0,
        "type": "integer"
      },
      "values": {
        "items": {
          "$ref": "#/definitions/repository_permission"
        },
        "minItems": 0,
        "type": "array",
        "uniqueItems": true
      }
    },
    "type": "object"
  },
  "paginated_snippet_comments": {
    "additionalProperties": false,
    "description": "A paginated list of snippet comments.",
    "properties": {
      "next": {
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "page": {
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "minimum": 1,
        "type": "integer"
      },
      "pagelen": {
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "minimum": 1,
        "type": "integer"
      },
      "previous": {
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "size": {
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "minimum": 0,
        "type": "integer"
      },
      "values": {
        "items": {
          "$ref": "#/definitions/snippet_comment"
        },
        "minItems": 0,
        "type": "array",
        "uniqueItems": true
      }
    },
    "type": "object"
  },
  "paginated_snippet_commit": {
    "additionalProperties": false,
    "description": "A paginated list of snippet commits.",
    "properties": {
      "next": {
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "page": {
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "minimum": 1,
        "type": "integer"
      },
      "pagelen": {
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "minimum": 1,
        "type": "integer"
      },
      "previous": {
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "size": {
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "minimum": 0,
        "type": "integer"
      },
      "values": {
        "items": {
          "$ref": "#/definitions/snippet_commit"
        },
        "minItems": 0,
        "type": "array"
      }
    },
    "type": "object"
  },
  "paginated_snippets": {
    "additionalProperties": false,
    "description": "A paginated list of snippets.",
    "properties": {
      "next": {
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "page": {
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "minimum": 1,
        "type": "integer"
      },
      "pagelen": {
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "minimum": 1,
        "type": "integer"
      },
      "previous": {
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "size": {
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "minimum": 0,
        "type": "integer"
      },
      "values": {
        "items": {
          "$ref": "#/definitions/snippet"
        },
        "minItems": 0,
        "type": "array",
        "uniqueItems": true
      }
    },
    "type": "object"
  },
  "paginated_ssh_user_keys": {
    "additionalProperties": false,
    "description": "A paginated list of SSH keys.",
    "properties": {
      "next": {
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "page": {
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "minimum": 1,
        "type": "integer"
      },
      "pagelen": {
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "minimum": 1,
        "type": "integer"
      },
      "previous": {
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "size": {
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "minimum": 0,
        "type": "integer"
      },
      "values": {
        "items": {
          "$ref": "#/definitions/ssh_account_key"
        },
        "minItems": 0,
        "type": "array",
        "uniqueItems": true
      }
    },
    "type": "object"
  },
  "paginated_tags": {
    "additionalProperties": false,
    "description": "A paginated list of tags.",
    "properties": {
      "next": {
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "page": {
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "minimum": 1,
        "type": "integer"
      },
      "pagelen": {
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "minimum": 1,
        "type": "integer"
      },
      "previous": {
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "size": {
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "minimum": 0,
        "type": "integer"
      },
      "values": {
        "items": {
          "$ref": "#/definitions/tag"
        },
        "minItems": 0,
        "type": "array",
        "uniqueItems": true
      }
    },
    "type": "object"
  },
  "paginated_team_permissions": {
    "additionalProperties": false,
    "description": "A paginated list of team permissions.",
    "properties": {
      "next": {
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "page": {
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "minimum": 1,
        "type": "integer"
      },
      "pagelen": {
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "minimum": 1,
        "type": "integer"
      },
      "previous": {
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "size": {
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "minimum": 0,
        "type": "integer"
      },
      "values": {
        "items": {
          "$ref": "#/definitions/team_permission"
        },
        "minItems": 0,
        "type": "array",
        "uniqueItems": true
      }
    },
    "type": "object"
  },
  "paginated_teams": {
    "additionalProperties": false,
    "description": "A paginated list of teams.",
    "properties": {
      "next": {
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "page": {
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "minimum": 1,
        "type": "integer"
      },
      "pagelen": {
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "minimum": 1,
        "type": "integer"
      },
      "previous": {
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "size": {
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "minimum": 0,
        "type": "integer"
      },
      "values": {
        "items": {
          "$ref": "#/definitions/team"
        },
        "minItems": 0,
        "type": "array",
        "uniqueItems": true
      }
    },
    "type": "object"
  },
  "paginated_treeentries": {
    "additionalProperties": false,
    "description": "A paginated list of commit_file and/or commit_directory objects.",
    "properties": {
      "next": {
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "page": {
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "minimum": 1,
        "type": "integer"
      },
      "pagelen": {
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "minimum": 1,
        "type": "integer"
      },
      "previous": {
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "size": {
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "minimum": 0,
        "type": "integer"
      },
      "values": {
        "items": {
          "$ref": "#/definitions/treeentry"
        },
        "minItems": 0,
        "type": "array",
        "uniqueItems": true
      }
    },
    "type": "object"
  },
  "paginated_users": {
    "additionalProperties": false,
    "description": "A paginated list of users.",
    "properties": {
      "next": {
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "page": {
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "minimum": 1,
        "type": "integer"
      },
      "pagelen": {
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "minimum": 1,
        "type": "integer"
      },
      "previous": {
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "size": {
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "minimum": 0,
        "type": "integer"
      },
      "values": {
        "items": {
          "$ref": "#/definitions/user"
        },
        "minItems": 0,
        "type": "array",
        "uniqueItems": true
      }
    },
    "type": "object"
  },
  "paginated_versions": {
    "additionalProperties": false,
    "description": "A paginated list of issue tracker versions.",
    "properties": {
      "next": {
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "page": {
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "minimum": 1,
        "type": "integer"
      },
      "pagelen": {
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "minimum": 1,
        "type": "integer"
      },
      "previous": {
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "size": {
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "minimum": 0,
        "type": "integer"
      },
      "values": {
        "items": {
          "$ref": "#/definitions/version"
        },
        "minItems": 0,
        "type": "array",
        "uniqueItems": true
      }
    },
    "type": "object"
  },
  "paginated_webhook_subscriptions": {
    "additionalProperties": false,
    "description": "A paginated list of webhook subscriptions",
    "properties": {
      "next": {
        "description": "Link to the next page if it exists. The last page of a collection does not have this value. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "page": {
        "description": "Page number of the current results. This is an optional element that is not provided in all responses.",
        "minimum": 1,
        "type": "integer"
      },
      "pagelen": {
        "description": "Current number of objects on the existing page. The default value is 10 with 100 being the maximum allowed value. Individual APIs may enforce different values.",
        "minimum": 1,
        "type": "integer"
      },
      "previous": {
        "description": "Link to previous page if it exists. A collections first page does not have this value. This is an optional element that is not provided in all responses. Some result sets strictly support forward navigation and never provide previous links. Clients must anticipate that backwards navigation is not always available. Use this link to navigate the result set and refrain from constructing your own URLs.",
        "format": "uri",
        "type": "string"
      },
      "size": {
        "description": "Total number of objects in the response. This is an optional element that is not provided in all responses, as it can be expensive to compute.",
        "minimum": 0,
        "type": "integer"
      },
      "values": {
        "items": {
          "$ref": "#/definitions/webhook_subscription"
        },
        "minItems": 0,
        "type": "array",
        "uniqueItems": true
      }
    },
    "type": "object"
  },
  "participant": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "description": "Object describing a user's role on resources like commits or pull requests.",
        "properties": {
          "approved": {
            "type": "boolean"
          },
          "participated_on": {
            "description": "The ISO8601 timestamp of the participant's action. For approvers, this is the time of their approval. For commenters and pull request reviewers who are not approvers, this is the time they last commented, or null if they have not commented.",
            "format": "date-time",
            "type": "string"
          },
          "role": {
            "enum": [
              "PARTICIPANT",
              "REVIEWER"
            ],
            "type": "string"
          },
          "user": {
            "$ref": "#/definitions/user"
          }
        },
        "type": "object"
      }
    ]
  },
  "pipeline": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "description": "A Bitbucket Pipeline. This represents an actual pipeline result.",
        "properties": {
          "build_number": {
            "description": "The build number of the pipeline.",
            "type": "integer"
          },
          "build_seconds_used": {
            "description": "The number of build seconds used by this pipeline.",
            "type": "integer"
          },
          "completed_on": {
            "description": "The timestamp when the Pipeline was completed. This is not set if the pipeline is still in progress.",
            "format": "date-time",
            "type": "string"
          },
          "created_on": {
            "description": "The timestamp when the pipeline was created.",
            "format": "date-time",
            "type": "string"
          },
          "creator": {
            "$ref": "#/definitions/account",
            "description": "The Bitbucket account that was used to create the pipeline."
          },
          "repository": {
            "$ref": "#/definitions/repository"
          },
          "state": {
            "$ref": "#/definitions/pipeline_state"
          },
          "target": {
            "$ref": "#/definitions/pipeline_target",
            "description": "The target that the pipeline built."
          },
          "trigger": {
            "$ref": "#/definitions/pipeline_trigger",
            "description": "The trigger used for the pipeline."
          },
          "uuid": {
            "description": "The UUID identifying the pipeline.",
            "type": "string"
          }
        },
        "type": "object"
      }
    ]
  },
  "pipeline_build_number": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "description": "A Pipelines build number.",
        "properties": {
          "next": {
            "description": "The next number that will be used as build number.",
            "type": "integer"
          }
        },
        "type": "object"
      }
    ]
  },
  "pipeline_command": {
    "description": "An executable pipeline command.",
    "properties": {
      "command": {
        "description": "The executable command.",
        "type": "string"
      },
      "name": {
        "description": "The name of the command.",
        "type": "string"
      }
    },
    "type": "object"
  },
  "pipeline_commit_target": {
    "allOf": [
      {
        "$ref": "#/definitions/pipeline_target"
      },
      {
        "additionalProperties": true,
        "description": "A Bitbucket Pipelines commit target.",
        "properties": {
          "commit": {
            "$ref": "#/definitions/commit"
          },
          "selector": {
            "$ref": "#/definitions/pipeline_selector"
          }
        },
        "type": "object"
      }
    ]
  },
  "pipeline_error": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "description": "An error causing a pipeline failure.",
        "properties": {
          "key": {
            "description": "The error key.",
            "type": "string"
          },
          "message": {
            "description": "The error message.",
            "type": "string"
          }
        },
        "type": "object"
      }
    ]
  },
  "pipeline_image": {
    "description": "The definition of a Docker image that can be used for a Bitbucket Pipelines step execution context.",
    "properties": {
      "email": {
        "description": "The email needed to authenticate with the Docker registry. Only required when using a private Docker image.",
        "type": "string"
      },
      "name": {
        "description": "The name of the image. If the image is hosted on DockerHub the short name can be used, otherwise the fully qualified name is required here.",
        "type": "string"
      },
      "password": {
        "description": "The password needed to authenticate with the Docker registry. Only required when using a private Docker image.",
        "type": "string"
      },
      "username": {
        "description": "The username needed to authenticate with the Docker registry. Only required when using a private Docker image.",
        "type": "string"
      }
    },
    "type": "object"
  },
  "pipeline_known_host": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "description": "A Pipelines known host.",
        "properties": {
          "hostname": {
            "description": "The hostname of the known host.",
            "type": "string"
          },
          "public_key": {
            "$ref": "#/definitions/pipeline_ssh_public_key",
            "description": "The public key of the known host."
          },
          "uuid": {
            "description": "The UUID identifying the known host.",
            "type": "string"
          }
        },
        "type": "object"
      }
    ]
  },
  "pipeline_ref_target": {
    "allOf": [
      {
        "$ref": "#/definitions/pipeline_target"
      },
      {
        "additionalProperties": true,
        "description": "A Bitbucket Pipelines reference target.",
        "properties": {
          "commit": {
            "$ref": "#/definitions/commit"
          },
          "ref_name": {
            "description": "The name of the reference.",
            "type": "string"
          },
          "ref_type": {
            "description": "The type of reference (branch/tag).",
            "enum": [
              "branch",
              "tag",
              "named_branch",
              "bookmark"
            ],
            "type": "string"
          },
          "selector": {
            "$ref": "#/definitions/pipeline_selector"
          }
        },
        "type": "object"
      }
    ]
  },
  "pipeline_schedule": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "description": "A Pipelines schedule.",
        "properties": {
          "created_on": {
            "description": "The timestamp when the schedule was created.",
            "format": "date-time",
            "type": "string"
          },
          "cron_pattern": {
            "description": "The cron expression that the schedule applies.",
            "type": "string"
          },
          "enabled": {
            "description": "Whether the schedule is enabled.",
            "type": "boolean"
          },
          "selector": {
            "$ref": "#/definitions/pipeline_selector"
          },
          "target": {
            "$ref": "#/definitions/pipeline_target",
            "description": "The target on which the schedule will be executed."
          },
          "updated_on": {
            "description": "The timestamp when the schedule was updated.",
            "format": "date-time",
            "type": "string"
          },
          "uuid": {
            "description": "The UUID identifying the schedule.",
            "type": "string"
          }
        },
        "type": "object"
      }
    ]
  },
  "pipeline_schedule_execution": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "description": "A Pipelines schedule execution.",
        "properties": {},
        "type": "object"
      }
    ]
  },
  "pipeline_schedule_execution_errored": {
    "allOf": [
      {
        "$ref": "#/definitions/pipeline_schedule_execution"
      },
      {
        "additionalProperties": true,
        "description": "A Pipelines schedule execution that failed to be executed.",
        "properties": {
          "error": {
            "$ref": "#/definitions/pipeline_error",
            "description": "The error that caused the execution to fail."
          }
        },
        "type": "object"
      }
    ]
  },
  "pipeline_schedule_execution_executed": {
    "allOf": [
      {
        "$ref": "#/definitions/pipeline_schedule_execution"
      },
      {
        "additionalProperties": true,
        "description": "A Pipelines executed schedule execution.",
        "properties": {
          "pipeline": {
            "$ref": "#/definitions/pipeline",
            "description": "The pipeline that was triggered by this execution of a schedule."
          }
        },
        "type": "object"
      }
    ]
  },
  "pipeline_selector": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "description": "A representation of the selector that was used to identify the pipeline in the YML file.",
        "properties": {
          "pattern": {
            "description": "The name of the matching pipeline definition.",
            "type": "string"
          },
          "type": {
            "description": "The type of selector.",
            "enum": [
              "branches",
              "tags",
              "bookmarks",
              "default",
              "custom"
            ],
            "type": "string"
          }
        },
        "type": "object"
      }
    ]
  },
  "pipeline_ssh_key_pair": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "description": "A Pipelines SSH key pair.",
        "properties": {
          "private_key": {
            "description": "The SSH private key. This value will be empty when retrieving the SSH key pair.",
            "type": "string"
          },
          "public_key": {
            "description": "The SSH public key.",
            "type": "string"
          }
        },
        "type": "object"
      }
    ]
  },
  "pipeline_ssh_public_key": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "description": "A Pipelines known host public key.",
        "properties": {
          "key": {
            "description": "The base64 encoded public key.",
            "type": "string"
          },
          "key_type": {
            "description": "The type of the public key.",
            "type": "string"
          },
          "md5_fingerprint": {
            "description": "The MD5 fingerprint of the public key.",
            "type": "string"
          },
          "sha256_fingerprint": {
            "description": "The SHA-256 fingerprint of the public key.",
            "type": "string"
          }
        },
        "type": "object"
      }
    ]
  },
  "pipeline_state": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "description": "The representation of the progress state of a pipeline.",
        "properties": {},
        "type": "object"
      }
    ]
  },
  "pipeline_state_completed": {
    "allOf": [
      {
        "$ref": "#/definitions/pipeline_state"
      },
      {
        "additionalProperties": true,
        "description": "A Bitbucket Pipelines COMPLETED pipeline state.",
        "properties": {
          "name": {
            "description": "The name of pipeline state (COMPLETED).",
            "enum": [
              "COMPLETED"
            ],
            "type": "string"
          },
          "result": {
            "$ref": "#/definitions/pipeline_state_completed_result",
            "description": "A result of a completed state of a pipeline."
          }
        },
        "type": "object"
      }
    ]
  },
  "pipeline_state_completed_error": {
    "allOf": [
      {
        "$ref": "#/definitions/pipeline_state_completed_result"
      },
      {
        "additionalProperties": true,
        "description": "A Bitbucket Pipelines ERROR pipeline result.",
        "properties": {
          "error": {
            "$ref": "#/definitions/pipeline_error",
            "description": "An error result of a completed state of a Bitbucket Pipeline."
          },
          "name": {
            "description": "The name of the result (ERROR)",
            "enum": [
              "ERROR"
            ],
            "type": "string"
          }
        },
        "type": "object"
      }
    ]
  },
  "pipeline_state_completed_expired": {
    "allOf": [
      {
        "$ref": "#/definitions/pipeline_state_completed_result"
      },
      {
        "additionalProperties": true,
        "description": "A Bitbucket Pipelines EXPIRED pipeline result.",
        "properties": {
          "name": {
            "description": "The name of the stopped result (EXPIRED).",
            "enum": [
              "EXPIRED"
            ],
            "type": "string"
          }
        },
        "type": "object"
      }
    ]
  },
  "pipeline_state_completed_failed": {
    "allOf": [
      {
        "$ref": "#/definitions/pipeline_state_completed_result"
      },
      {
        "additionalProperties": true,
        "description": "A Bitbucket Pipelines FAILED pipeline result.",
        "properties": {
          "name": {
            "description": "The name of the failed result (FAILED).",
            "enum": [
              "FAILED"
            ],
            "type": "string"
          }
        },
        "type": "object"
      }
    ]
  },
  "pipeline_state_completed_result": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "description": "A result of a completed pipeline state.",
        "properties": {},
        "type": "object"
      }
    ]
  },
  "pipeline_state_completed_stopped": {
    "allOf": [
      {
        "$ref": "#/definitions/pipeline_state_completed_result"
      },
      {
        "additionalProperties": true,
        "description": "A Bitbucket Pipelines STOPPED pipeline result.",
        "properties": {
          "name": {
            "description": "The name of the stopped result (STOPPED).",
            "enum": [
              "STOPPED"
            ],
            "type": "string"
          }
        },
        "type": "object"
      }
    ]
  },
  "pipeline_state_completed_successful": {
    "allOf": [
      {
        "$ref": "#/definitions/pipeline_state_completed_result"
      },
      {
        "additionalProperties": true,
        "description": "A Bitbucket Pipelines SUCCESSFUL pipeline result.",
        "properties": {
          "name": {
            "description": "The name of the successful result (SUCCESSFUL).",
            "enum": [
              "SUCCESSFUL"
            ],
            "type": "string"
          }
        },
        "type": "object"
      }
    ]
  },
  "pipeline_state_in_progress": {
    "allOf": [
      {
        "$ref": "#/definitions/pipeline_state"
      },
      {
        "additionalProperties": true,
        "description": "A Bitbucket Pipelines IN_PROGRESS pipeline state.",
        "properties": {
          "name": {
            "description": "The name of pipeline state (IN_PROGRESS).",
            "enum": [
              "IN_PROGRESS"
            ],
            "type": "string"
          },
          "stage": {
            "$ref": "#/definitions/pipeline_state_in_progress_stage",
            "description": "A stage of an in progress state of a pipeline."
          }
        },
        "type": "object"
      }
    ]
  },
  "pipeline_state_in_progress_paused": {
    "allOf": [
      {
        "$ref": "#/definitions/pipeline_state_in_progress_stage"
      },
      {
        "additionalProperties": true,
        "description": "A Bitbucket Pipelines PAUSED stage of a pipeline that is in progress.",
        "properties": {
          "name": {
            "description": "The name of the stage (PAUSED)",
            "enum": [
              "PAUSED"
            ],
            "type": "string"
          }
        },
        "type": "object"
      }
    ]
  },
  "pipeline_state_in_progress_running": {
    "allOf": [
      {
        "$ref": "#/definitions/pipeline_state_in_progress_stage"
      },
      {
        "additionalProperties": true,
        "description": "A Bitbucket Pipelines RUNNING stage of a pipeline that is in progress.",
        "properties": {
          "name": {
            "description": "The name of the stage (RUNNING)",
            "enum": [
              "RUNNING"
            ],
            "type": "string"
          }
        },
        "type": "object"
      }
    ]
  },
  "pipeline_state_in_progress_stage": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "description": "A result of an in progress pipeline state.",
        "properties": {},
        "type": "object"
      }
    ]
  },
  "pipeline_state_pending": {
    "allOf": [
      {
        "$ref": "#/definitions/pipeline_state"
      },
      {
        "additionalProperties": true,
        "description": "A Bitbucket Pipelines PENDING pipeline state.",
        "properties": {
          "name": {
            "description": "The name of pipeline state (PENDING).",
            "enum": [
              "PENDING"
            ],
            "type": "string"
          }
        },
        "type": "object"
      }
    ]
  },
  "pipeline_step": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "description": "A step of a Bitbucket pipeline. This represents the actual result of the step execution.",
        "properties": {
          "completed_on": {
            "description": "The timestamp when the step execution was completed. This is not set if the step is still in progress.",
            "format": "date-time",
            "type": "string"
          },
          "image": {
            "$ref": "#/definitions/pipeline_image",
            "description": "The Docker image used as the build container for the step."
          },
          "script_commands": {
            "description": "The list of build commands. These commands are executed in the build container.",
            "items": {
              "$ref": "#/definitions/pipeline_command"
            },
            "type": "array"
          },
          "setup_commands": {
            "description": "The list of commands that are executed as part of the setup phase of the build. These commands are executed outside the build container.",
            "items": {
              "$ref": "#/definitions/pipeline_command"
            },
            "type": "array"
          },
          "started_on": {
            "description": "The timestamp when the step execution was started. This is not set when the step hasn't executed yet.",
            "format": "date-time",
            "type": "string"
          },
          "state": {
            "$ref": "#/definitions/pipeline_step_state",
            "description": "The current state of the step"
          },
          "uuid": {
            "description": "The UUID identifying the step.",
            "type": "string"
          }
        },
        "type": "object"
      }
    ]
  },
  "pipeline_step_error": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "description": "An error causing a step failure.",
        "properties": {
          "key": {
            "description": "The error key.",
            "type": "string"
          },
          "message": {
            "description": "The error message.",
            "type": "string"
          }
        },
        "type": "object"
      }
    ]
  },
  "pipeline_step_state": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "description": "The representation of the progress state of a pipeline step.",
        "properties": {},
        "type": "object"
      }
    ]
  },
  "pipeline_step_state_completed": {
    "allOf": [
      {
        "$ref": "#/definitions/pipeline_step_state"
      },
      {
        "additionalProperties": true,
        "description": "A Bitbucket Pipelines COMPLETED pipeline step state.",
        "properties": {
          "name": {
            "description": "The name of pipeline step state (COMPLETED).",
            "enum": [
              "COMPLETED"
            ],
            "type": "string"
          },
          "result": {
            "$ref": "#/definitions/pipeline_step_state_completed_result",
            "description": "A result of a completed state of a pipeline step."
          }
        },
        "type": "object"
      }
    ]
  },
  "pipeline_step_state_completed_error": {
    "allOf": [
      {
        "$ref": "#/definitions/pipeline_step_state_completed_result"
      },
      {
        "additionalProperties": true,
        "description": "A Bitbucket Pipelines ERROR pipeline step result.",
        "properties": {
          "error": {
            "$ref": "#/definitions/pipeline_step_error",
            "description": "An error result of a completed state of a Bitbucket Pipeline step."
          },
          "name": {
            "description": "The name of the result (ERROR)",
            "enum": [
              "ERROR"
            ],
            "type": "string"
          }
        },
        "type": "object"
      }
    ]
  },
  "pipeline_step_state_completed_expired": {
    "allOf": [
      {
        "$ref": "#/definitions/pipeline_step_state_completed_result"
      },
      {
        "additionalProperties": true,
        "description": "A Bitbucket Pipelines EXPIRED pipeline step result.",
        "properties": {
          "name": {
            "description": "The name of the result (EXPIRED)",
            "enum": [
              "EXPIRED"
            ],
            "type": "string"
          }
        },
        "type": "object"
      }
    ]
  },
  "pipeline_step_state_completed_failed": {
    "allOf": [
      {
        "$ref": "#/definitions/pipeline_step_state_completed_result"
      },
      {
        "additionalProperties": true,
        "description": "A Bitbucket Pipelines FAILED pipeline step result.",
        "properties": {
          "name": {
            "description": "The name of the result (FAILED)",
            "enum": [
              "FAILED"
            ],
            "type": "string"
          }
        },
        "type": "object"
      }
    ]
  },
  "pipeline_step_state_completed_not_run": {
    "allOf": [
      {
        "$ref": "#/definitions/pipeline_step_state_completed_result"
      },
      {
        "additionalProperties": true,
        "description": "A Bitbucket Pipelines NOT_RUN pipeline step result.",
        "properties": {
          "name": {
            "description": "The name of the result (NOT_RUN)",
            "enum": [
              "NOT_RUN"
            ],
            "type": "string"
          }
        },
        "type": "object"
      }
    ]
  },
  "pipeline_step_state_completed_result": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "description": "A result of a completed pipeline step state.",
        "properties": {},
        "type": "object"
      }
    ]
  },
  "pipeline_step_state_completed_stopped": {
    "allOf": [
      {
        "$ref": "#/definitions/pipeline_step_state_completed_result"
      },
      {
        "additionalProperties": true,
        "description": "A Bitbucket Pipelines STOPPED pipeline step result.",
        "properties": {
          "name": {
            "description": "The name of the result (STOPPED)",
            "enum": [
              "STOPPED"
            ],
            "type": "string"
          }
        },
        "type": "object"
      }
    ]
  },
  "pipeline_step_state_completed_successful": {
    "allOf": [
      {
        "$ref": "#/definitions/pipeline_step_state_completed_result"
      },
      {
        "additionalProperties": true,
        "description": "A Bitbucket Pipelines SUCCESSFUL pipeline step result.",
        "properties": {
          "name": {
            "description": "The name of the result (SUCCESSFUL)",
            "enum": [
              "SUCCESSFUL"
            ],
            "type": "string"
          }
        },
        "type": "object"
      }
    ]
  },
  "pipeline_step_state_in_progress": {
    "allOf": [
      {
        "$ref": "#/definitions/pipeline_step_state"
      },
      {
        "additionalProperties": true,
        "description": "A Bitbucket Pipelines IN_PROGRESS pipeline step state.",
        "properties": {
          "name": {
            "description": "The name of pipeline step state (IN_PROGRESS).",
            "enum": [
              "IN_PROGRESS"
            ],
            "type": "string"
          }
        },
        "type": "object"
      }
    ]
  },
  "pipeline_step_state_pending": {
    "allOf": [
      {
        "$ref": "#/definitions/pipeline_step_state"
      },
      {
        "additionalProperties": true,
        "description": "A Bitbucket Pipelines PENDING pipeline step state.",
        "properties": {
          "name": {
            "description": "The name of pipeline step state (PENDING).",
            "enum": [
              "PENDING"
            ],
            "type": "string"
          }
        },
        "type": "object"
      }
    ]
  },
  "pipeline_step_state_ready": {
    "allOf": [
      {
        "$ref": "#/definitions/pipeline_step_state"
      },
      {
        "additionalProperties": true,
        "description": "A Bitbucket Pipelines READY pipeline step state.",
        "properties": {
          "name": {
            "description": "The name of pipeline step state (READY).",
            "enum": [
              "READY"
            ],
            "type": "string"
          }
        },
        "type": "object"
      }
    ]
  },
  "pipeline_target": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "description": "A representation of the target that a pipeline executes on.",
        "properties": {},
        "type": "object"
      }
    ]
  },
  "pipeline_trigger": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "description": "A representation of the trigger used for a pipeline.",
        "properties": {},
        "type": "object"
      }
    ]
  },
  "pipeline_trigger_manual": {
    "allOf": [
      {
        "$ref": "#/definitions/pipeline_trigger"
      },
      {
        "additionalProperties": true,
        "description": "A Bitbucket Pipelines MANUAL trigger.",
        "properties": {},
        "type": "object"
      }
    ]
  },
  "pipeline_trigger_push": {
    "allOf": [
      {
        "$ref": "#/definitions/pipeline_trigger"
      },
      {
        "additionalProperties": true,
        "description": "A Bitbucket Pipelines PUSH trigger.",
        "properties": {},
        "type": "object"
      }
    ]
  },
  "pipeline_variable": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "description": "A Pipelines variable.",
        "properties": {
          "key": {
            "description": "The unique name of the variable.",
            "type": "string"
          },
          "secured": {
            "description": "If true, this variable will be treated as secured. The value will never be exposed in the logs or the REST API.",
            "type": "boolean"
          },
          "uuid": {
            "description": "The UUID identifying the variable.",
            "type": "string"
          },
          "value": {
            "description": "The value of the variable. If the variable is secured, this will be empty.",
            "type": "string"
          }
        },
        "type": "object"
      }
    ]
  },
  "pipelines_config": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "description": "The Pipelines configuration for a repository.",
        "properties": {
          "enabled": {
            "description": "Whether Pipelines is enabled for the repository.",
            "type": "boolean"
          },
          "repository": {
            "$ref": "#/definitions/repository"
          }
        },
        "type": "object"
      }
    ]
  },
  "pipelines_ddev_pipeline_step": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "description": "A step of a Bitbucket pipeline. This represents the actual result of the step execution.",
        "type": "object",
        "x-bb-default-fields": [
          "uuid",
          "state",
          "image"
        ]
      }
    ]
  },
  "pipelines_stg_west_pipeline_step": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "description": "A step of a Bitbucket pipeline. This represents the actual result of the step execution.",
        "type": "object",
        "x-bb-default-fields": [
          "uuid",
          "state",
          "image"
        ]
      }
    ]
  },
  "project": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "description": "A Bitbucket project.\n            Projects are used by teams to organize repositories.",
        "properties": {
          "created_on": {
            "format": "date-time",
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "is_private": {
            "description": "\nIndicates whether the project is publicly accessible, or whether it is\nprivate to the team and consequently only visible to team members.\nNote that private projects cannot contain public repositories.",
            "type": "boolean"
          },
          "key": {
            "description": "The project's key.",
            "type": "string"
          },
          "links": {
            "additionalProperties": false,
            "properties": {
              "avatar": {
                "additionalProperties": false,
                "properties": {
                  "href": {
                    "format": "uri",
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "html": {
                "additionalProperties": false,
                "properties": {
                  "href": {
                    "format": "uri",
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "name": {
            "description": "The name of the project.",
            "type": "string"
          },
          "owner": {
            "$ref": "#/definitions/team"
          },
          "updated_on": {
            "format": "date-time",
            "type": "string"
          },
          "uuid": {
            "description": "The project's immutable id.",
            "type": "string"
          }
        },
        "type": "object"
      }
    ]
  },
  "pullrequest": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "description": "A pull request object.",
        "properties": {
          "author": {
            "$ref": "#/definitions/account"
          },
          "close_source_branch": {
            "description": "A boolean flag indicating if merging the pull request closes the source branch.",
            "type": "boolean"
          },
          "closed_by": {
            "$ref": "#/definitions/account"
          },
          "comment_count": {
            "description": "The number of comments for a specific pull request.",
            "minimum": 0,
            "type": "integer"
          },
          "created_on": {
            "description": "The ISO8601 timestamp the request was created.",
            "format": "date-time",
            "type": "string"
          },
          "destination": {
            "$ref": "#/definitions/pullrequest_endpoint"
          },
          "id": {
            "description": "The pull request's unique ID. Note that pull request IDs are only unique within their associated repository.",
            "type": "integer"
          },
          "links": {
            "additionalProperties": false,
            "properties": {
              "activity": {
                "additionalProperties": false,
                "properties": {
                  "href": {
                    "format": "uri",
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "approve": {
                "additionalProperties": false,
                "properties": {
                  "href": {
                    "format": "uri",
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "comments": {
                "additionalProperties": false,
                "properties": {
                  "href": {
                    "format": "uri",
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "commits": {
                "additionalProperties": false,
                "properties": {
                  "href": {
                    "format": "uri",
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "decline": {
                "additionalProperties": false,
                "properties": {
                  "href": {
                    "format": "uri",
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "diff": {
                "additionalProperties": false,
                "properties": {
                  "href": {
                    "format": "uri",
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "html": {
                "additionalProperties": false,
                "properties": {
                  "href": {
                    "format": "uri",
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "merge": {
                "additionalProperties": false,
                "properties": {
                  "href": {
                    "format": "uri",
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "self": {
                "additionalProperties": false,
                "properties": {
                  "href": {
                    "format": "uri",
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "merge_commit": {
            "additionalProperties": false,
            "properties": {
              "hash": {
                "pattern": "[0-9a-f]{7,}?",
                "type": "string"
              }
            },
            "type": "object"
          },
          "participants": {
            "description": "        The list of users that are collaborating on this pull request.\n        Collaborators are user that:\n\n        * are added to the pull request as a reviewer (part of the reviewers\n          list)\n        * are not explicit reviewers, but have commented on the pull request\n        * are not explicit reviewers, but have approved the pull request\n\n        Each user is wrapped in an object that indicates the user's role and\n        whether they have approved the pull request. For performance reasons,\n        the API only returns this list when an API requests a pull request by\n        id.\n        ",
            "items": {
              "$ref": "#/definitions/participant"
            },
            "type": "array"
          },
          "reason": {
            "description": "Explains why a pull request was declined. This field is only applicable to pull requests in rejected state.",
            "type": "string"
          },
          "rendered": {
            "additionalProperties": false,
            "properties": {
              "description": {
                "additionalProperties": false,
                "properties": {
                  "html": {
                    "description": "The user's content rendered as HTML.",
                    "type": "string"
                  },
                  "markup": {
                    "description": "The type of markup language the raw content is to be interpreted in.",
                    "enum": [
                      "markdown",
                      "creole",
                      "plaintext"
                    ],
                    "type": "string"
                  },
                  "raw": {
                    "description": "The text as it was typed by a user.",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "reason": {
                "additionalProperties": false,
                "properties": {
                  "html": {
                    "description": "The user's content rendered as HTML.",
                    "type": "string"
                  },
                  "markup": {
                    "description": "The type of markup language the raw content is to be interpreted in.",
                    "enum": [
                      "markdown",
                      "creole",
                      "plaintext"
                    ],
                    "type": "string"
                  },
                  "raw": {
                    "description": "The text as it was typed by a user.",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "title": {
                "additionalProperties": false,
                "properties": {
                  "html": {
                    "description": "The user's content rendered as HTML.",
                    "type": "string"
                  },
                  "markup": {
                    "description": "The type of markup language the raw content is to be interpreted in.",
                    "enum": [
                      "markdown",
                      "creole",
                      "plaintext"
                    ],
                    "type": "string"
                  },
                  "raw": {
                    "description": "The text as it was typed by a user.",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "reviewers": {
            "description": "The list of users that were added as reviewers on this pull request when it was created. For performance reasons, the API only includes this list on a pull request's `self` URL.",
            "items": {
              "$ref": "#/definitions/account"
            },
            "type": "array"
          },
          "source": {
            "$ref": "#/definitions/pullrequest_endpoint"
          },
          "state": {
            "description": "The pull request's current status.",
            "enum": [
              "MERGED",
              "SUPERSEDED",
              "OPEN",
              "DECLINED"
            ],
            "type": "string"
          },
          "summary": {
            "additionalProperties": false,
            "properties": {
              "html": {
                "description": "The user's content rendered as HTML.",
                "type": "string"
              },
              "markup": {
                "description": "The type of markup language the raw content is to be interpreted in.",
                "enum": [
                  "markdown",
                  "creole",
                  "plaintext"
                ],
                "type": "string"
              },
              "raw": {
                "description": "The text as it was typed by a user.",
                "type": "string"
              }
            },
            "type": "object"
          },
          "task_count": {
            "description": "The number of open tasks for a specific pull request.",
            "minimum": 0,
            "type": "integer"
          },
          "title": {
            "description": "Title of the pull request.",
            "type": "string"
          },
          "updated_on": {
            "description": "The ISO8601 timestamp the request was last updated.",
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      }
    ]
  },
  "pullrequest_comment": {
    "allOf": [
      {
        "$ref": "#/definitions/comment"
      },
      {
        "additionalProperties": true,
        "description": "A pullrequest comment.",
        "properties": {
          "pullrequest": {
            "$ref": "#/definitions/pullrequest"
          }
        },
        "type": "object"
      }
    ]
  },
  "pullrequest_endpoint": {
    "additionalProperties": false,
    "properties": {
      "branch": {
        "additionalProperties": false,
        "properties": {
          "default_merge_strategy": {
            "description": "The default merge strategy, when this endpoint is the destination of the pull request.",
            "type": "string"
          },
          "merge_strategies": {
            "description": "Available merge strategies, when this endpoint is the destination of the pull request.",
            "items": {
              "enum": [
                "merge_commit",
                "squash",
                "fast_forward"
              ],
              "type": "string"
            },
            "type": "array"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      },
      "commit": {
        "additionalProperties": false,
        "properties": {
          "hash": {
            "pattern": "[0-9a-f]{7,}?",
            "type": "string"
          }
        },
        "type": "object"
      },
      "repository": {
        "$ref": "#/definitions/repository"
      }
    },
    "type": "object"
  },
  "pullrequest_merge_parameters": {
    "additionalProperties": true,
    "description": "The metadata that describes a pull request merge.",
    "properties": {
      "close_source_branch": {
        "description": "Whether the source branch should be deleted. If this is not provided, we fallback to the value used when the pull request was created, which defaults to False",
        "type": "boolean"
      },
      "merge_strategy": {
        "default": "merge_commit",
        "description": "The merge strategy that will be used to merge the pull request.",
        "enum": [
          "merge_commit",
          "squash",
          "fast_forward"
        ],
        "type": "string"
      },
      "message": {
        "description": "The commit message that will be used on the resulting commit.",
        "type": "string"
      },
      "type": {
        "type": "string"
      }
    },
    "required": [
      "type"
    ],
    "type": "object"
  },
  "ref": {
    "additionalProperties": true,
    "description": "A ref object, representing a branch or tag in a repository.",
    "properties": {
      "links": {
        "additionalProperties": false,
        "properties": {
          "commits": {
            "additionalProperties": false,
            "properties": {
              "href": {
                "format": "uri",
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "html": {
            "additionalProperties": false,
            "properties": {
              "href": {
                "format": "uri",
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "self": {
            "additionalProperties": false,
            "properties": {
              "href": {
                "format": "uri",
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "name": {
        "description": "The name of the ref.",
        "type": "string"
      },
      "target": {
        "$ref": "#/definitions/commit"
      },
      "type": {
        "type": "string"
      }
    },
    "required": [
      "type"
    ],
    "type": "object"
  },
  "repository": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "description": "A Bitbucket repository.",
        "properties": {
          "created_on": {
            "format": "date-time",
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "fork_policy": {
            "description": "\nControls the rules for forking this repository.\n\n* **allow_forks**: unrestricted forking\n* **no_public_forks**: restrict forking to private forks (forks cannot\n  be made public later)\n* **no_forks**: deny all forking\n",
            "enum": [
              "allow_forks",
              "no_public_forks",
              "no_forks"
            ],
            "type": "string"
          },
          "full_name": {
            "description": "The concatenation of the repository owner's username and the slugified name, e.g. \"evzijst/interruptingcow\". This is the same string used in Bitbucket URLs.",
            "type": "string"
          },
          "has_issues": {
            "type": "boolean"
          },
          "has_wiki": {
            "type": "boolean"
          },
          "is_private": {
            "type": "boolean"
          },
          "language": {
            "type": "string"
          },
          "links": {
            "additionalProperties": false,
            "properties": {
              "avatar": {
                "additionalProperties": false,
                "properties": {
                  "href": {
                    "format": "uri",
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "clone": {
                "items": {
                  "additionalProperties": false,
                  "properties": {
                    "href": {
                      "format": "uri",
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "commits": {
                "additionalProperties": false,
                "properties": {
                  "href": {
                    "format": "uri",
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "downloads": {
                "additionalProperties": false,
                "properties": {
                  "href": {
                    "format": "uri",
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "forks": {
                "additionalProperties": false,
                "properties": {
                  "href": {
                    "format": "uri",
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "hooks": {
                "additionalProperties": false,
                "properties": {
                  "href": {
                    "format": "uri",
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "html": {
                "additionalProperties": false,
                "properties": {
                  "href": {
                    "format": "uri",
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "pullrequests": {
                "additionalProperties": false,
                "properties": {
                  "href": {
                    "format": "uri",
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "self": {
                "additionalProperties": false,
                "properties": {
                  "href": {
                    "format": "uri",
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "watchers": {
                "additionalProperties": false,
                "properties": {
                  "href": {
                    "format": "uri",
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "mainbranch": {
            "$ref": "#/definitions/branch"
          },
          "name": {
            "type": "string"
          },
          "owner": {
            "$ref": "#/definitions/account"
          },
          "parent": {
            "$ref": "#/definitions/repository"
          },
          "project": {
            "$ref": "#/definitions/project"
          },
          "scm": {
            "enum": [
              "hg",
              "git"
            ],
            "type": "string"
          },
          "size": {
            "type": "integer"
          },
          "updated_on": {
            "format": "date-time",
            "type": "string"
          },
          "uuid": {
            "description": "The repository's immutable id. This can be used as a substitute for the slug segment in URLs. Doing this guarantees your URLs will survive renaming of the repository by its owner, or even transfer of the repository to a different user.",
            "type": "string"
          }
        },
        "type": "object"
      }
    ]
  },
  "repository_permission": {
    "additionalProperties": true,
    "description": "A user's permission for a given repository.",
    "properties": {
      "permission": {
        "enum": [
          "admin",
          "write",
          "read"
        ],
        "type": "string"
      },
      "repository": {
        "$ref": "#/definitions/repository"
      },
      "type": {
        "type": "string"
      },
      "user": {
        "$ref": "#/definitions/user"
      }
    },
    "required": [
      "type"
    ],
    "type": "object"
  },
  "search_code_search_result": {
    "properties": {
      "content_match_count": {
        "format": "int64",
        "readOnly": true,
        "type": "integer"
      },
      "content_matches": {
        "items": {
          "$ref": "#/definitions/search_content_match"
        },
        "readOnly": true,
        "type": "array"
      },
      "file": {
        "$ref": "#/definitions/commit_file",
        "readOnly": true
      },
      "path_matches": {
        "items": {
          "$ref": "#/definitions/search_segment"
        },
        "readOnly": true,
        "type": "array"
      },
      "type": {
        "readOnly": true,
        "type": "string"
      }
    },
    "type": "object"
  },
  "search_content_match": {
    "properties": {
      "lines": {
        "items": {
          "$ref": "#/definitions/search_line"
        },
        "readOnly": true,
        "type": "array"
      }
    },
    "type": "object"
  },
  "search_line": {
    "properties": {
      "line": {
        "format": "int32",
        "readOnly": true,
        "type": "integer"
      },
      "segments": {
        "items": {
          "$ref": "#/definitions/search_segment"
        },
        "readOnly": true,
        "type": "array"
      }
    },
    "type": "object"
  },
  "search_result_page": {
    "properties": {
      "next": {
        "format": "uri",
        "readOnly": true,
        "type": "string"
      },
      "page": {
        "format": "int32",
        "readOnly": true,
        "type": "integer"
      },
      "pagelen": {
        "format": "int32",
        "readOnly": true,
        "type": "integer"
      },
      "previous": {
        "format": "uri",
        "readOnly": true,
        "type": "string"
      },
      "query_substituted": {
        "readOnly": true,
        "type": "boolean"
      },
      "size": {
        "format": "int64",
        "readOnly": true,
        "type": "integer"
      },
      "values": {
        "items": {
          "$ref": "#/definitions/search_code_search_result"
        },
        "readOnly": true,
        "type": "array"
      }
    },
    "type": "object"
  },
  "search_segment": {
    "properties": {
      "match": {
        "readOnly": true,
        "type": "boolean"
      },
      "text": {
        "readOnly": true,
        "type": "string"
      }
    },
    "type": "object"
  },
  "snippet": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "description": "A snippet object.",
        "properties": {
          "created_on": {
            "format": "date-time",
            "type": "string"
          },
          "creator": {
            "$ref": "#/definitions/account"
          },
          "id": {
            "minimum": 0,
            "type": "integer"
          },
          "is_private": {
            "type": "boolean"
          },
          "owner": {
            "$ref": "#/definitions/account"
          },
          "scm": {
            "description": "The DVCS used to store the snippet.",
            "enum": [
              "hg",
              "git"
            ],
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "updated_on": {
            "format": "date-time",
            "type": "string"
          }
        },
        "type": "object"
      }
    ]
  },
  "snippet_comment": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "description": "A comment on a snippet.",
        "properties": {
          "links": {
            "additionalProperties": false,
            "properties": {
              "html": {
                "additionalProperties": false,
                "properties": {
                  "href": {
                    "format": "uri",
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "self": {
                "additionalProperties": false,
                "properties": {
                  "href": {
                    "format": "uri",
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "snippet": {
            "$ref": "#/definitions/snippet"
          }
        },
        "type": "object"
      }
    ]
  },
  "snippet_commit": {
    "allOf": [
      {
        "$ref": "#/definitions/base_commit"
      },
      {
        "additionalProperties": true,
        "description": "",
        "properties": {
          "links": {
            "additionalProperties": false,
            "properties": {
              "diff": {
                "additionalProperties": false,
                "properties": {
                  "href": {
                    "format": "uri",
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "html": {
                "additionalProperties": false,
                "properties": {
                  "href": {
                    "format": "uri",
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "self": {
                "additionalProperties": false,
                "properties": {
                  "href": {
                    "format": "uri",
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "snippet": {
            "$ref": "#/definitions/snippet"
          }
        },
        "type": "object"
      }
    ]
  },
  "ssh_account_key": {
    "allOf": [
      {
        "$ref": "#/definitions/ssh_key"
      },
      {
        "additionalProperties": true,
        "description": "Represents an SSH public key for a user.",
        "properties": {
          "owner": {
            "$ref": "#/definitions/account"
          }
        },
        "type": "object"
      }
    ]
  },
  "ssh_key": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "description": "Base type for representing SSH public keys.",
        "properties": {
          "comment": {
            "description": "The comment parsed from the SSH key (if present)",
            "type": "string"
          },
          "created_on": {
            "format": "date-time",
            "type": "string"
          },
          "key": {
            "description": "The SSH public key value in OpenSSH format.",
            "type": "string"
          },
          "label": {
            "description": "The user-defined label for the SSH key",
            "type": "string"
          },
          "last_used": {
            "format": "date-time",
            "type": "string"
          },
          "links": {
            "additionalProperties": false,
            "properties": {
              "self": {
                "additionalProperties": false,
                "properties": {
                  "href": {
                    "format": "uri",
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "uuid": {
            "description": "The SSH key's immutable ID.",
            "type": "string"
          }
        },
        "type": "object"
      }
    ]
  },
  "subject_types": {
    "additionalProperties": false,
    "description": "The mapping of resource/subject types pointing to their individual event types.",
    "properties": {
      "repository": {
        "additionalProperties": false,
        "properties": {
          "events": {
            "additionalProperties": false,
            "properties": {
              "href": {
                "format": "uri",
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "team": {
        "additionalProperties": false,
        "properties": {
          "events": {
            "additionalProperties": false,
            "properties": {
              "href": {
                "format": "uri",
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      },
      "user": {
        "additionalProperties": false,
        "properties": {
          "events": {
            "additionalProperties": false,
            "properties": {
              "href": {
                "format": "uri",
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "type": "object"
      }
    },
    "type": "object"
  },
  "tag": {
    "allOf": [
      {
        "$ref": "#/definitions/ref"
      },
      {
        "additionalProperties": true,
        "description": "A tag object, representing a tag in a repository.",
        "properties": {
          "date": {
            "description": "The date that the tag was created, if available",
            "format": "date-time",
            "type": "string"
          },
          "message": {
            "description": "The message associated with the tag, if available.",
            "type": "string"
          },
          "tagger": {
            "$ref": "#/definitions/author"
          }
        },
        "type": "object"
      }
    ]
  },
  "team": {
    "allOf": [
      {
        "$ref": "#/definitions/account"
      },
      {
        "additionalProperties": true,
        "description": "A team object.",
        "properties": {},
        "type": "object"
      }
    ]
  },
  "team_permission": {
    "additionalProperties": true,
    "description": "A user's permission for a given team.",
    "properties": {
      "permission": {
        "enum": [
          "admin",
          "collaborator"
        ],
        "type": "string"
      },
      "team": {
        "$ref": "#/definitions/team"
      },
      "type": {
        "type": "string"
      },
      "user": {
        "$ref": "#/definitions/user"
      }
    },
    "required": [
      "type"
    ],
    "type": "object"
  },
  "treeentry": {
    "additionalProperties": true,
    "description": "Base type for most resource objects. It defines the common `type` element that identifies an object's type. It also identifies the element as Swagger's `discriminator`.",
    "properties": {
      "commit": {
        "$ref": "#/definitions/commit"
      },
      "path": {
        "description": "The path in the repository",
        "type": "string"
      },
      "type": {
        "type": "string"
      }
    },
    "required": [
      "type"
    ],
    "type": "object"
  },
  "user": {
    "allOf": [
      {
        "$ref": "#/definitions/account"
      },
      {
        "additionalProperties": true,
        "description": "A user object.",
        "properties": {
          "account_id": {
            "description": "The user's Atlassian account ID.",
            "type": "string"
          },
          "is_staff": {
            "type": "boolean"
          }
        },
        "type": "object"
      }
    ]
  },
  "version": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "description": "A version as defined in a repository's issue tracker.",
        "properties": {
          "id": {
            "type": "integer"
          },
          "links": {
            "additionalProperties": false,
            "properties": {
              "self": {
                "additionalProperties": false,
                "properties": {
                  "href": {
                    "format": "uri",
                    "type": "string"
                  },
                  "name": {
                    "type": "string"
                  }
                },
                "type": "object"
              }
            },
            "type": "object"
          },
          "name": {
            "type": "string"
          }
        },
        "type": "object"
      }
    ]
  },
  "webhook_subscription": {
    "allOf": [
      {
        "$ref": "#/definitions/object"
      },
      {
        "additionalProperties": true,
        "description": "A Webhook subscription.",
        "properties": {
          "active": {
            "type": "boolean"
          },
          "created_at": {
            "format": "date-time",
            "type": "string"
          },
          "description": {
            "description": "A user-defined description of the webhook.",
            "type": "string"
          },
          "events": {
            "description": "The events this webhook is subscribed to.",
            "items": {
              "enum": [
                "pullrequest:unapproved",
                "issue:comment_created",
                "pullrequest:approved",
                "repo:created",
                "repo:deleted",
                "repo:imported",
                "pullrequest:comment_updated",
                "issue:updated",
                "project:updated",
                "pullrequest:comment_created",
                "repo:commit_status_updated",
                "pullrequest:updated",
                "issue:created",
                "repo:fork",
                "pullrequest:comment_deleted",
                "repo:commit_status_created",
                "repo:updated",
                "pullrequest:rejected",
                "pullrequest:fulfilled",
                "repo:push",
                "pullrequest:created",
                "repo:transfer",
                "repo:commit_comment_created"
              ],
              "type": "string"
            },
            "minItems": 1,
            "type": "array",
            "uniqueItems": true
          },
          "subject": {
            "$ref": "#/definitions/object"
          },
          "subject_type": {
            "description": "The type of entity, which is `repository` in the case of webhook subscriptions on repositories.",
            "enum": [
              "user",
              "repository",
              "team"
            ],
            "type": "string"
          },
          "url": {
            "description": "The URL events get delivered to.",
            "format": "uri",
            "type": "string"
          },
          "uuid": {
            "description": "The webhook's id",
            "type": "string"
          }
        },
        "type": "object"
      }
    ]
  }
}
