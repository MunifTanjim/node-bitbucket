{
  "/addon": {
    "delete": {
      "addon": ""
    },
    "put": {
      "addon": ""
    }
  },
  "/addon/linkers": {
    "get": {
      "addon": ""
    }
  },
  "/addon/linkers/{linker_key}": {
    "get": {
      "addon": ""
    }
  },
  "/addon/linkers/{linker_key}/values": {
    "delete": {
      "addon": ""
    },
    "get": {
      "addon": ""
    },
    "post": {
      "addon": ""
    },
    "put": {
      "addon": ""
    }
  },
  "/addon/linkers/{linker_key}/values/{value_id}": {
    "delete": {
      "addon": ""
    },
    "get": {
      "addon": ""
    }
  },
  "/hook_events": {
    "get": {
      "hook_events": "getAllSubjectTypes",
      "webhooks": "getAllSubjectTypes"
    }
  },
  "/hook_events/{subject_type}": {
    "get": {
      "hook_events": "list",
      "webhooks": "list"
    }
  },
  "/pullrequests/{selected_user}": {
    "get": {
      "pullrequests": "listPullrequestsForUser"
    }
  },
  "/repositories": {
    "get": {
      "repositories": "listGlobal"
    }
  },
  "/repositories/{workspace}": {
    "get": {
      "repositories": "list"
    }
  },
  "/repositories/{workspace}/{repo_slug}": {
    "delete": {
      "repositories": "delete"
    },
    "get": {
      "repositories": "get"
    },
    "post": {
      "repositories": "create"
    },
    "put": {
      "repositories": "update"
    }
  },
  "/repositories/{workspace}/{repo_slug}/branch-restrictions": {
    "get": {
      "branchrestrictions": "list",
      "repositories": "listBranchRestrictions"
    },
    "post": {
      "branchrestrictions": "create",
      "repositories": "createBranchRestriction"
    }
  },
  "/repositories/{workspace}/{repo_slug}/branch-restrictions/{id}": {
    "delete": {
      "branchrestrictions": "delete",
      "repositories": "deleteBranchRestriction"
    },
    "get": {
      "branchrestrictions": "get",
      "repositories": "getBranchRestriction"
    },
    "put": {
      "branchrestrictions": "update",
      "repositories": "updateBranchRestriction"
    }
  },
  "/repositories/{workspace}/{repo_slug}/branching-model": {
    "get": {
      "branching_model": "get",
      "repositories": "getBranchingModel"
    }
  },
  "/repositories/{workspace}/{repo_slug}/branching-model/settings": {
    "get": {
      "branching_model": "getSettings",
      "repositories": "getBranchingModelSettings"
    },
    "put": {
      "branching_model": "updateSettings",
      "repositories": "updateBranchingModelSettings"
    }
  },
  "/repositories/{workspace}/{repo_slug}/commit/{commit}": {
    "get": {
      "commits": "get",
      "repositories": "getCommit"
    }
  },
  "/repositories/{workspace}/{repo_slug}/commit/{commit}/approve": {
    "delete": {
      "commits": "deleteApproval",
      "repositories": "deleteCommitApproval"
    },
    "post": {
      "commits": "createApproval",
      "repositories": "createCommitApproval"
    }
  },
  "/repositories/{workspace}/{repo_slug}/commit/{commit}/comments": {
    "get": {
      "commits": "listComments",
      "repositories": "listCommitComments"
    },
    "post": {
      "commits": "createComment",
      "repositories": "createCommitComment"
    }
  },
  "/repositories/{workspace}/{repo_slug}/commit/{commit}/comments/{comment_id}": {
    "get": {
      "commits": "getComment",
      "repositories": "getCommitComment"
    }
  },
  "/repositories/{workspace}/{repo_slug}/commit/{commit}/properties/{app_key}/{property_name}": {
    "delete": {
      "properties": "deleteCommitHostedPropertyValue",
      "repositories": "deleteCommitHostedPropertyValue"
    },
    "get": {
      "properties": "getCommitHostedPropertyValue",
      "repositories": "getCommitHostedPropertyValue"
    },
    "put": {
      "properties": "updateCommitHostedPropertyValue",
      "repositories": "updateCommitHostedPropertyValue"
    }
  },
  "/repositories/{workspace}/{repo_slug}/commit/{commit}/pullrequests": {
    "get": {
      "pullrequests": "listForCommit",
      "repositories": "listPullrequestsForCommit"
    }
  },
  "/repositories/{workspace}/{repo_slug}/commit/{commit}/reports": {
    "get": {
      "commits": "getReportsForCommit",
      "reports": "getReportsForCommit",
      "repositories": "getReportsForCommit"
    }
  },
  "/repositories/{workspace}/{repo_slug}/commit/{commit}/reports/{reportId}": {
    "delete": {
      "commits": "deleteReport",
      "reports": "deleteReport",
      "repositories": "deleteReport"
    },
    "get": {
      "commits": "getReport",
      "reports": "getReport",
      "repositories": "getReport"
    },
    "put": {
      "commits": "createOrUpdateReport",
      "reports": "createOrUpdateReport",
      "repositories": "createOrUpdateReport"
    }
  },
  "/repositories/{workspace}/{repo_slug}/commit/{commit}/reports/{reportId}/annotations": {
    "get": {
      "commits": "getAnnotationsForReport",
      "reports": "getAnnotationsForReport",
      "repositories": "getAnnotationsForReport"
    },
    "post": {
      "commits": "bulkCreateOrUpdateAnnotations",
      "reports": "bulkCreateOrUpdateAnnotations",
      "repositories": "bulkCreateOrUpdateAnnotations"
    }
  },
  "/repositories/{workspace}/{repo_slug}/commit/{commit}/reports/{reportId}/annotations/{annotationId}": {
    "delete": {
      "commits": "deleteAnnotation",
      "reports": "deleteAnnotation",
      "repositories": "deleteAnnotation"
    },
    "get": {
      "commits": "getAnnotation",
      "reports": "getAnnotation",
      "repositories": "getAnnotation"
    },
    "put": {
      "commits": "createOrUpdateAnnotation",
      "reports": "createOrUpdateAnnotation",
      "repositories": "createOrUpdateAnnotation"
    }
  },
  "/repositories/{workspace}/{repo_slug}/commit/{commit}/statuses": {
    "get": {
      "commitstatuses": "list",
      "repositories": "listCommitStatuses"
    }
  },
  "/repositories/{workspace}/{repo_slug}/commit/{commit}/statuses/build": {
    "post": {
      "commitstatuses": "createBuildStatus",
      "repositories": "createCommitBuildStatus"
    }
  },
  "/repositories/{workspace}/{repo_slug}/commit/{commit}/statuses/build/{key}": {
    "get": {
      "commitstatuses": "getBuildStatus",
      "repositories": "getCommitBuildStatus"
    },
    "put": {
      "commitstatuses": "updateBuildStatus",
      "repositories": "updateCommitBuildStatus"
    }
  },
  "/repositories/{workspace}/{repo_slug}/commits": {
    "get": {
      "commits": "list",
      "repositories": "listCommits"
    },
    "post": {
      "commits": "listAlt",
      "repositories": "listCommitsAlt"
    }
  },
  "/repositories/{workspace}/{repo_slug}/commits/{revision}": {
    "get": {
      "commits": "listAt",
      "repositories": "listCommitsAt"
    },
    "post": {
      "commits": "listAtAlt",
      "repositories": "listCommitsAtAlt"
    }
  },
  "/repositories/{workspace}/{repo_slug}/components": {
    "get": {
      "issue_tracker": "listComponents",
      "repositories": "listComponents"
    }
  },
  "/repositories/{workspace}/{repo_slug}/components/{component_id}": {
    "get": {
      "issue_tracker": "getComponent",
      "repositories": "getIssueComponent"
    }
  },
  "/repositories/{workspace}/{repo_slug}/default-reviewers": {
    "get": {
      "pullrequests": "listDefaultReviewers",
      "repositories": "listDefaultReviewers"
    }
  },
  "/repositories/{workspace}/{repo_slug}/default-reviewers/{target_username}": {
    "delete": {
      "pullrequests": "deleteDefaultReviewer",
      "repositories": "deleteDefaultReviewer"
    },
    "get": {
      "pullrequests": "getDefaultReviewer",
      "repositories": "getDefaultReviewer"
    },
    "put": {
      "pullrequests": "addDefaultReviewer",
      "repositories": "addDefaultReviewer"
    }
  },
  "/repositories/{workspace}/{repo_slug}/deploy-keys": {
    "get": {
      "deploy": "listKeys",
      "repositories": "listDeployKeys"
    },
    "post": {
      "deploy": "createKey",
      "repositories": "createDeployKey"
    }
  },
  "/repositories/{workspace}/{repo_slug}/deploy-keys/{key_id}": {
    "delete": {
      "deploy": "deleteKey",
      "repositories": "deleteDeployKey"
    },
    "get": {
      "deploy": "getKey",
      "repositories": "getDeployKey"
    },
    "put": {
      "deploy": "updateKey",
      "repositories": "updateDeployKey"
    }
  },
  "/repositories/{workspace}/{repo_slug}/deployments_config/environments/{environment_uuid}/variables": {
    "get": {
      "pipelines": "listDeploymentVariables",
      "repositories": "listDeploymentVariables"
    },
    "post": {
      "pipelines": "createDeploymentVariable",
      "repositories": "createDeploymentVariable"
    }
  },
  "/repositories/{workspace}/{repo_slug}/deployments_config/environments/{environment_uuid}/variables/{variable_uuid}": {
    "delete": {
      "pipelines": "deleteDeploymentVariable",
      "repositories": "deleteDeploymentVariable"
    },
    "put": {
      "pipelines": "updateDeploymentVariable",
      "repositories": "updateDeploymentVariable"
    }
  },
  "/repositories/{workspace}/{repo_slug}/deployments/": {
    "get": {
      "deployments": "list",
      "repositories": "listDeployments"
    }
  },
  "/repositories/{workspace}/{repo_slug}/deployments/{deployment_uuid}": {
    "get": {
      "deployments": "get",
      "repositories": "getDeployment"
    }
  },
  "/repositories/{workspace}/{repo_slug}/diff/{spec}": {
    "get": {
      "commits": "getDiff",
      "repositories": "getDiff"
    }
  },
  "/repositories/{workspace}/{repo_slug}/diffstat/{spec}": {
    "get": {
      "repositories": "listDiffStats"
    }
  },
  "/repositories/{workspace}/{repo_slug}/downloads": {
    "get": {
      "downloads": "list",
      "repositories": "listDownloads"
    },
    "post": {
      "downloads": "create",
      "repositories": "createDownload"
    }
  },
  "/repositories/{workspace}/{repo_slug}/downloads/{filename}": {
    "delete": {
      "downloads": "delete",
      "repositories": "deleteDownload"
    },
    "get": {
      "downloads": "get",
      "repositories": "getDownload"
    }
  },
  "/repositories/{workspace}/{repo_slug}/environments/": {
    "get": {
      "deployments": "listEnvironments",
      "repositories": "listEnvironments"
    },
    "post": {
      "deployments": "createEnvironment",
      "repositories": "createEnvironment"
    }
  },
  "/repositories/{workspace}/{repo_slug}/environments/{environment_uuid}": {
    "delete": {
      "deployments": "deleteEnvironmentForRepository",
      "repositories": "deleteEnvironment"
    },
    "get": {
      "deployments": "getEnvironment",
      "repositories": "getEnvironment"
    }
  },
  "/repositories/{workspace}/{repo_slug}/environments/{environment_uuid}/changes/": {
    "post": {
      "deployments": "updateEnvironment",
      "repositories": "updateEnvironment"
    }
  },
  "/repositories/{workspace}/{repo_slug}/filehistory/{commit}/{path}": {
    "get": {
      "repositories": "listFileHistory",
      "source": "listHistory"
    }
  },
  "/repositories/{workspace}/{repo_slug}/forks": {
    "get": {
      "repositories": "listForks"
    },
    "post": {
      "repositories": "createFork"
    }
  },
  "/repositories/{workspace}/{repo_slug}/hooks": {
    "get": {
      "repositories": "listWebhooks",
      "webhooks": "listForRepo"
    },
    "post": {
      "repositories": "createWebhook",
      "webhooks": "create"
    }
  },
  "/repositories/{workspace}/{repo_slug}/hooks/{uid}": {
    "delete": {
      "repositories": "deleteWebhook",
      "webhooks": "delete"
    },
    "get": {
      "repositories": "getWebhook",
      "webhooks": "get"
    },
    "put": {
      "repositories": "updateWebhook",
      "webhooks": "update"
    }
  },
  "/repositories/{workspace}/{repo_slug}/issues": {
    "get": {
      "issue_tracker": "list",
      "repositories": "listIssues"
    },
    "post": {
      "issue_tracker": "create",
      "repositories": "createIssue"
    }
  },
  "/repositories/{workspace}/{repo_slug}/issues/{issue_id}": {
    "delete": {
      "issue_tracker": "delete",
      "repositories": "deleteIssue"
    },
    "get": {
      "issue_tracker": "get",
      "repositories": "getIssue"
    },
    "put": {
      "issue_tracker": "update",
      "repositories": "updateIssue"
    }
  },
  "/repositories/{workspace}/{repo_slug}/issues/{issue_id}/attachments": {
    "get": {
      "issue_tracker": "listAttachments",
      "repositories": "listIssueAttachments"
    },
    "post": {
      "issue_tracker": "createAttachments",
      "repositories": "createIssueAttachments"
    }
  },
  "/repositories/{workspace}/{repo_slug}/issues/{issue_id}/attachments/{path}": {
    "delete": {
      "issue_tracker": "deleteAttachment",
      "repositories": "deleteIssueAttachment"
    },
    "get": {
      "issue_tracker": "getAttachment",
      "repositories": "getIssueAttachment"
    }
  },
  "/repositories/{workspace}/{repo_slug}/issues/{issue_id}/changes": {
    "get": {
      "issue_tracker": "listChanges",
      "repositories": "listIssueChanges"
    },
    "post": {
      "issue_tracker": "createChange",
      "repositories": "createIssueChange"
    }
  },
  "/repositories/{workspace}/{repo_slug}/issues/{issue_id}/changes/{change_id}": {
    "get": {
      "issue_tracker": "getChange",
      "repositories": "getIssueChange"
    }
  },
  "/repositories/{workspace}/{repo_slug}/issues/{issue_id}/comments": {
    "get": {
      "issue_tracker": "listComments",
      "repositories": "listIssueComments"
    },
    "post": {
      "issue_tracker": "createComment",
      "repositories": "createIssueComment"
    }
  },
  "/repositories/{workspace}/{repo_slug}/issues/{issue_id}/comments/{comment_id}": {
    "delete": {
      "issue_tracker": "deleteComment",
      "repositories": "deleteIssueComment"
    },
    "get": {
      "issue_tracker": "getComment",
      "repositories": "getIssueComment"
    },
    "put": {
      "issue_tracker": "updateComment",
      "repositories": "updateIssueComment"
    }
  },
  "/repositories/{workspace}/{repo_slug}/issues/{issue_id}/vote": {
    "delete": {
      "issue_tracker": "deleteVote",
      "repositories": "deleteIssueVote"
    },
    "get": {
      "issue_tracker": "getVote",
      "repositories": "getIssueVote"
    },
    "put": {
      "issue_tracker": "createVote",
      "repositories": "createIssueVote"
    }
  },
  "/repositories/{workspace}/{repo_slug}/issues/{issue_id}/watch": {
    "delete": {
      "issue_tracker": "deleteWatch",
      "repositories": "deleteIssueWatch"
    },
    "get": {
      "issue_tracker": "getWatch",
      "repositories": "getIssueWatch"
    },
    "put": {
      "issue_tracker": "createWatch",
      "repositories": "createIssueWatch"
    }
  },
  "/repositories/{workspace}/{repo_slug}/issues/export": {
    "post": {
      "repositories": "createIssueExportJob"
    }
  },
  "/repositories/{workspace}/{repo_slug}/issues/export/{repo_name}-issues-{task_id}.zip": {
    "get": {
      "repositories": "getIssueExportJobStatus"
    }
  },
  "/repositories/{workspace}/{repo_slug}/issues/import": {
    "get": {
      "repositories": "getIssueImportJobStatus"
    },
    "post": {
      "repositories": "createIssueImportJob"
    }
  },
  "/repositories/{workspace}/{repo_slug}/merge-base/{revspec}": {
    "get": {
      "commits": "",
      "repositories": ""
    }
  },
  "/repositories/{workspace}/{repo_slug}/milestones": {
    "get": {
      "issue_tracker": "listMilestones",
      "repositories": "listMilestones"
    }
  },
  "/repositories/{workspace}/{repo_slug}/milestones/{milestone_id}": {
    "get": {
      "issue_tracker": "getMilestone",
      "repositories": "getIssueMilestone"
    }
  },
  "/repositories/{workspace}/{repo_slug}/patch/{spec}": {
    "get": {
      "commits": "getPatch",
      "repositories": "getPatch"
    }
  },
  "/repositories/{workspace}/{repo_slug}/pipelines_config": {
    "get": {
      "pipelines": "getConfig",
      "repositories": "getPipelineConfig"
    },
    "put": {
      "pipelines": "updateConfig",
      "repositories": "updatePipelineConfig"
    }
  },
  "/repositories/{workspace}/{repo_slug}/pipelines_config/build_number": {
    "put": {
      "pipelines": "updateBuildNumber",
      "repositories": "updatePipelineBuildNumber"
    }
  },
  "/repositories/{workspace}/{repo_slug}/pipelines_config/schedules/": {
    "get": {
      "pipelines": "listSchedules",
      "repositories": "listPipelineSchedules"
    },
    "post": {
      "pipelines": "createSchedule",
      "repositories": "createPipelineSchedule"
    }
  },
  "/repositories/{workspace}/{repo_slug}/pipelines_config/schedules/{schedule_uuid}": {
    "delete": {
      "pipelines": "deleteSchedule",
      "repositories": "deletePipelineSchedule"
    },
    "get": {
      "pipelines": "getSchedule",
      "repositories": "getPipelineSchedule"
    },
    "put": {
      "pipelines": "updateSchedule",
      "repositories": "updatePipelineSchedule"
    }
  },
  "/repositories/{workspace}/{repo_slug}/pipelines_config/schedules/{schedule_uuid}/executions/": {
    "get": {
      "pipelines": "listScheduleExecutions",
      "repositories": "listPipelineScheduleExecutions"
    }
  },
  "/repositories/{workspace}/{repo_slug}/pipelines_config/ssh/key_pair": {
    "delete": {
      "pipelines": "deleteSshKeyPair",
      "repositories": "deletePipelineSshKeyPair"
    },
    "get": {
      "pipelines": "getSshKeyPair",
      "repositories": "getPipelineSshKeyPair"
    },
    "put": {
      "pipelines": "updateSshKeyPair",
      "repositories": "updatePipelineSshKeyPair"
    }
  },
  "/repositories/{workspace}/{repo_slug}/pipelines_config/ssh/known_hosts/": {
    "get": {
      "pipelines": "listKnownHosts",
      "repositories": "listPipelineKnownHosts"
    },
    "post": {
      "pipelines": "createKnownHost",
      "repositories": "createPipelineKnownHost"
    }
  },
  "/repositories/{workspace}/{repo_slug}/pipelines_config/ssh/known_hosts/{known_host_uuid}": {
    "delete": {
      "pipelines": "deleteKnownHost",
      "repositories": "deletePipelineKnownHost"
    },
    "get": {
      "pipelines": "getKnownHost",
      "repositories": "getPipelineKnownHost"
    },
    "put": {
      "pipelines": "updateKnownHost",
      "repositories": "updatePipelineKnownHost"
    }
  },
  "/repositories/{workspace}/{repo_slug}/pipelines_config/variables/": {
    "get": {
      "pipelines": "listVariablesForRepo",
      "repositories": "listPipelineVariables"
    },
    "post": {
      "pipelines": "createVariable",
      "repositories": "createPipelineVariable"
    }
  },
  "/repositories/{workspace}/{repo_slug}/pipelines_config/variables/{variable_uuid}": {
    "delete": {
      "pipelines": "deleteVariable",
      "repositories": "deletePipelineVariable"
    },
    "get": {
      "pipelines": "getVariable",
      "repositories": "getPipelineVariable"
    },
    "put": {
      "pipelines": "updateVariable",
      "repositories": "updatePipelineVariable"
    }
  },
  "/repositories/{workspace}/{repo_slug}/pipelines-config/caches/": {
    "get": {
      "pipelines": "getRepositoryPipelineCaches",
      "repositories": "getRepositoryPipelineCaches"
    }
  },
  "/repositories/{workspace}/{repo_slug}/pipelines-config/caches/{cache_uuid}": {
    "delete": {
      "pipelines": "deleteRepositoryPipelineCache",
      "repositories": "deleteRepositoryPipelineCache"
    }
  },
  "/repositories/{workspace}/{repo_slug}/pipelines-config/caches/{cache_uuid}/content-uri": {
    "get": {
      "pipelines": "getRepositoryPipelineCacheContentURI",
      "repositories": "getRepositoryPipelineCacheContentURI"
    }
  },
  "/repositories/{workspace}/{repo_slug}/pipelines/": {
    "get": {
      "pipelines": "list",
      "repositories": "listPipelines"
    },
    "post": {
      "pipelines": "create",
      "repositories": "createPipeline"
    }
  },
  "/repositories/{workspace}/{repo_slug}/pipelines/{pipeline_uuid}": {
    "get": {
      "pipelines": "get",
      "repositories": "getPipeline"
    }
  },
  "/repositories/{workspace}/{repo_slug}/pipelines/{pipeline_uuid}/steps/": {
    "get": {
      "pipelines": "listSteps",
      "repositories": "listPipelineSteps"
    }
  },
  "/repositories/{workspace}/{repo_slug}/pipelines/{pipeline_uuid}/steps/{step_uuid}": {
    "get": {
      "pipelines": "getStep",
      "repositories": "getPipelineStep"
    }
  },
  "/repositories/{workspace}/{repo_slug}/pipelines/{pipeline_uuid}/steps/{step_uuid}/log": {
    "get": {
      "pipelines": "getStepLog",
      "repositories": "getPipelineStepLog"
    }
  },
  "/repositories/{workspace}/{repo_slug}/pipelines/{pipeline_uuid}/steps/{step_uuid}/logs/{log_uuid}": {
    "get": {
      "repositories": ""
    }
  },
  "/repositories/{workspace}/{repo_slug}/pipelines/{pipeline_uuid}/steps/{step_uuid}/test_reports": {
    "get": {
      "repositories": ""
    }
  },
  "/repositories/{workspace}/{repo_slug}/pipelines/{pipeline_uuid}/steps/{step_uuid}/test_reports/test_cases": {
    "get": {
      "repositories": ""
    }
  },
  "/repositories/{workspace}/{repo_slug}/pipelines/{pipeline_uuid}/steps/{step_uuid}/test_reports/test_cases/{test_case_uuid}/test_case_reasons": {
    "get": {
      "repositories": ""
    }
  },
  "/repositories/{workspace}/{repo_slug}/pipelines/{pipeline_uuid}/stopPipeline": {
    "post": {
      "pipelines": "stop",
      "repositories": "stopPipeline"
    }
  },
  "/repositories/{workspace}/{repo_slug}/properties/{app_key}/{property_name}": {
    "delete": {
      "properties": "deleteRepositoryHostedPropertyValue",
      "repositories": "deleteRepositoryHostedPropertyValue"
    },
    "get": {
      "properties": "getRepositoryHostedPropertyValue",
      "repositories": "getRepositoryHostedPropertyValue"
    },
    "put": {
      "properties": "updateRepositoryHostedPropertyValue",
      "repositories": "updateRepositoryHostedPropertyValue"
    }
  },
  "/repositories/{workspace}/{repo_slug}/pullrequests": {
    "get": {
      "pullrequests": "list",
      "repositories": "listPullRequests"
    },
    "post": {
      "pullrequests": "create",
      "repositories": "createPullRequest"
    }
  },
  "/repositories/{workspace}/{repo_slug}/pullrequests/{pull_request_id}": {
    "get": {
      "pullrequests": "get",
      "repositories": "getPullRequest"
    },
    "put": {
      "pullrequests": "update",
      "repositories": "updatePullRequest"
    }
  },
  "/repositories/{workspace}/{repo_slug}/pullrequests/{pull_request_id}/activity": {
    "get": {
      "pullrequests": "listActivities",
      "repositories": "listPullRequestActivities"
    }
  },
  "/repositories/{workspace}/{repo_slug}/pullrequests/{pull_request_id}/approve": {
    "delete": {
      "pullrequests": "deleteApproval",
      "repositories": "deletePullRequestApproval"
    },
    "post": {
      "pullrequests": "createApproval",
      "repositories": "createPullRequestApproval"
    }
  },
  "/repositories/{workspace}/{repo_slug}/pullrequests/{pull_request_id}/comments": {
    "get": {
      "pullrequests": "listComments",
      "repositories": "listPullRequestComments"
    },
    "post": {
      "pullrequests": "createComment",
      "repositories": "createPullRequestComment"
    }
  },
  "/repositories/{workspace}/{repo_slug}/pullrequests/{pull_request_id}/comments/{comment_id}": {
    "delete": {
      "pullrequests": "deleteComment",
      "repositories": "deletePullRequestComment"
    },
    "get": {
      "pullrequests": "getComment",
      "repositories": "getPullRequestComment"
    },
    "put": {
      "pullrequests": "updateComment",
      "repositories": "updatePullRequestComment"
    }
  },
  "/repositories/{workspace}/{repo_slug}/pullrequests/{pull_request_id}/commits": {
    "get": {
      "pullrequests": "listCommits",
      "repositories": "listPullRequestCommits"
    }
  },
  "/repositories/{workspace}/{repo_slug}/pullrequests/{pull_request_id}/decline": {
    "post": {
      "pullrequests": "decline",
      "repositories": "declinePullRequest"
    }
  },
  "/repositories/{workspace}/{repo_slug}/pullrequests/{pull_request_id}/diff": {
    "get": {
      "pullrequests": "getDiff",
      "repositories": "getPullRequestDiff"
    }
  },
  "/repositories/{workspace}/{repo_slug}/pullrequests/{pull_request_id}/diffstat": {
    "get": {
      "pullrequests": "getDiffStat",
      "repositories": "getPullRequestDiffStat"
    }
  },
  "/repositories/{workspace}/{repo_slug}/pullrequests/{pull_request_id}/merge": {
    "post": {
      "pullrequests": "merge",
      "repositories": "mergePullRequest"
    }
  },
  "/repositories/{workspace}/{repo_slug}/pullrequests/{pull_request_id}/merge/task-status/{task_id}": {
    "get": {
      "pullrequests": "",
      "repositories": ""
    }
  },
  "/repositories/{workspace}/{repo_slug}/pullrequests/{pull_request_id}/patch": {
    "get": {
      "pullrequests": "getPatch",
      "repositories": "getPullRequestPatch"
    }
  },
  "/repositories/{workspace}/{repo_slug}/pullrequests/{pull_request_id}/request-changes": {
    "delete": {
      "pullrequests": "",
      "repositories": ""
    },
    "post": {
      "pullrequests": "",
      "repositories": ""
    }
  },
  "/repositories/{workspace}/{repo_slug}/pullrequests/{pull_request_id}/statuses": {
    "get": {
      "commitstatuses": "listPullRequestStatuses",
      "pullrequests": "listStatuses",
      "repositories": "listPullRequestStatuses"
    }
  },
  "/repositories/{workspace}/{repo_slug}/pullrequests/{pullrequest_id}/properties/{app_key}/{property_name}": {
    "delete": {
      "properties": "deletePullRequestHostedPropertyValue",
      "repositories": "deletePullRequestHostedPropertyValue"
    },
    "get": {
      "properties": "getPullRequestHostedPropertyValue",
      "repositories": "getPullRequestHostedPropertyValue"
    },
    "put": {
      "properties": "updatePullRequestHostedPropertyValue",
      "repositories": "updatePullRequestHostedPropertyValue"
    }
  },
  "/repositories/{workspace}/{repo_slug}/pullrequests/activity": {
    "get": {
      "pullrequests": "listActivitiesForRepo",
      "repositories": "listPullRequestActivitiesForRepo"
    }
  },
  "/repositories/{workspace}/{repo_slug}/refs": {
    "get": {
      "refs": "list",
      "repositories": "listRefs"
    }
  },
  "/repositories/{workspace}/{repo_slug}/refs/branches": {
    "get": {
      "refs": "listBranches",
      "repositories": "listBranches"
    },
    "post": {
      "refs": "createBranch",
      "repositories": "createBranch"
    }
  },
  "/repositories/{workspace}/{repo_slug}/refs/branches/{name}": {
    "delete": {
      "refs": "deleteBranch",
      "repositories": "deleteBranch"
    },
    "get": {
      "refs": "getBranch",
      "repositories": "getBranch"
    }
  },
  "/repositories/{workspace}/{repo_slug}/refs/tags": {
    "get": {
      "refs": "listTags",
      "repositories": "listTags"
    },
    "post": {
      "refs": "createTag",
      "repositories": "createTag"
    }
  },
  "/repositories/{workspace}/{repo_slug}/refs/tags/{name}": {
    "delete": {
      "refs": "deleteTag",
      "repositories": "deleteTag"
    },
    "get": {
      "refs": "getTag",
      "repositories": "getTag"
    }
  },
  "/repositories/{workspace}/{repo_slug}/src": {
    "get": {
      "repositories": "readSrcRoot",
      "source": "readRoot"
    },
    "post": {
      "repositories": "createSrcFileCommit",
      "source": "createFileCommit"
    }
  },
  "/repositories/{workspace}/{repo_slug}/src/{commit}/{path}": {
    "get": {
      "repositories": "readSrc",
      "source": "read"
    }
  },
  "/repositories/{workspace}/{repo_slug}/versions": {
    "get": {
      "issue_tracker": "listVersions",
      "repositories": "listVersions"
    }
  },
  "/repositories/{workspace}/{repo_slug}/versions/{version_id}": {
    "get": {
      "issue_tracker": "getVersion",
      "repositories": "getIssueVersion"
    }
  },
  "/repositories/{workspace}/{repo_slug}/watchers": {
    "get": {
      "repositories": "listWatchers"
    }
  },
  "/snippets": {
    "get": {
      "snippets": "list"
    },
    "post": {
      "snippets": "create"
    }
  },
  "/snippets/{workspace}": {
    "get": {
      "snippets": "listForUser"
    },
    "post": {
      "snippets": "createForUser"
    }
  },
  "/snippets/{workspace}/{encoded_id}": {
    "delete": {
      "snippets": "delete"
    },
    "get": {
      "snippets": "get"
    },
    "put": {
      "snippets": "update"
    }
  },
  "/snippets/{workspace}/{encoded_id}/{node_id}": {
    "delete": {
      "snippets": "deleteAt"
    },
    "get": {
      "snippets": "getAt"
    },
    "put": {
      "snippets": "updateAt"
    }
  },
  "/snippets/{workspace}/{encoded_id}/{node_id}/files/{path}": {
    "get": {
      "snippets": "getFile"
    }
  },
  "/snippets/{workspace}/{encoded_id}/{revision}/diff": {
    "get": {
      "snippets": "getDiff"
    }
  },
  "/snippets/{workspace}/{encoded_id}/{revision}/patch": {
    "get": {
      "snippets": "getPatch"
    }
  },
  "/snippets/{workspace}/{encoded_id}/comments": {
    "get": {
      "snippets": "listComments"
    },
    "post": {
      "snippets": "createComment"
    }
  },
  "/snippets/{workspace}/{encoded_id}/comments/{comment_id}": {
    "delete": {
      "snippets": "deleteComment"
    },
    "get": {
      "snippets": "getComment"
    },
    "put": {
      "snippets": "updateComment"
    }
  },
  "/snippets/{workspace}/{encoded_id}/commits": {
    "get": {
      "snippets": "listCommits"
    }
  },
  "/snippets/{workspace}/{encoded_id}/commits/{revision}": {
    "get": {
      "snippets": "getCommit"
    }
  },
  "/snippets/{workspace}/{encoded_id}/files/{path}": {
    "get": {
      "snippet": "getRawFiles",
      "snippets": "getRawFiles"
    }
  },
  "/snippets/{workspace}/{encoded_id}/watch": {
    "delete": {
      "snippets": "stopWatch"
    },
    "get": {
      "snippets": "checkWatch"
    },
    "put": {
      "snippets": "startWatch"
    }
  },
  "/snippets/{workspace}/{encoded_id}/watchers": {
    "get": {
      "snippets": "listWatchers"
    }
  },
  "/teams": {
    "get": {
      "teams": "list"
    }
  },
  "/teams/{username}": {
    "get": {
      "teams": "get"
    }
  },
  "/teams/{username}/followers": {
    "get": {
      "teams": "listFollowers"
    }
  },
  "/teams/{username}/following": {
    "get": {
      "teams": "listFollowing"
    }
  },
  "/teams/{username}/hooks": {
    "get": {
      "teams": "listWebhooks",
      "webhooks": "listForTeam"
    },
    "post": {
      "teams": "createWebhook",
      "webhooks": "createForTeam"
    }
  },
  "/teams/{username}/hooks/{uid}": {
    "delete": {
      "teams": "deleteWebhook",
      "webhooks": "deleteForTeam"
    },
    "get": {
      "teams": "getWebhook",
      "webhooks": "getForTeam"
    },
    "put": {
      "teams": "updateWebhook",
      "webhooks": "updateForTeam"
    }
  },
  "/teams/{username}/members": {
    "get": {
      "teams": "getAllMembers"
    }
  },
  "/teams/{username}/permissions": {
    "get": {
      "teams": "listPermissions"
    }
  },
  "/teams/{username}/permissions/repositories": {
    "get": {
      "teams": "listPermissionsForRepos"
    }
  },
  "/teams/{username}/permissions/repositories/{repo_slug}": {
    "get": {
      "teams": "listPermissionsForRepo"
    }
  },
  "/teams/{username}/pipelines_config/variables/": {
    "get": {
      "pipelines": "listVariablesForTeam",
      "teams": "listPipelineVariables"
    },
    "post": {
      "pipelines": "createVariableForTeam",
      "teams": "createPipelineVariable"
    }
  },
  "/teams/{username}/pipelines_config/variables/{variable_uuid}": {
    "delete": {
      "pipelines": "deleteVariableForTeam",
      "teams": "deletePipelineVariable"
    },
    "get": {
      "pipelines": "getVariableForTeam",
      "teams": "getPipelineVariable"
    },
    "put": {
      "pipelines": "updateVariableForTeam",
      "teams": "updatePipelineVariable"
    }
  },
  "/teams/{username}/projects/": {
    "get": {
      "projects": "listForTeam",
      "teams": "listProjects"
    },
    "post": {
      "projects": "createForTeam",
      "teams": "createProject"
    }
  },
  "/teams/{username}/projects/{project_key}": {
    "delete": {
      "projects": "deleteForTeam",
      "teams": "deleteProject"
    },
    "get": {
      "projects": "getForTeam",
      "teams": "getProject"
    },
    "put": {
      "projects": "updateForTeam",
      "teams": "updateProject"
    }
  },
  "/teams/{username}/search/code": {
    "get": {
      "search": "codeOfTeam",
      "teams": "searchCode"
    }
  },
  "/teams/{workspace}/repositories": {
    "get": {
      "teams": "listRepositories",
      "users": "listRepositoriesForTeam"
    }
  },
  "/user": {
    "get": {
      "user": "get",
      "users": "getAuthedUser"
    }
  },
  "/user/emails": {
    "get": {
      "user": "listEmails",
      "users": "listEmailsForAuthedUser"
    }
  },
  "/user/emails/{email}": {
    "get": {
      "user": "getEmail",
      "users": "getEmailForAuthedUser"
    }
  },
  "/user/permissions/repositories": {
    "get": {
      "repositories": "listPermissions",
      "user": "listPermissionsForRepos"
    }
  },
  "/user/permissions/teams": {
    "get": {
      "user": "listPermissionsForTeams"
    }
  },
  "/user/permissions/workspaces": {
    "get": {
      "user": "",
      "workspaces": ""
    }
  },
  "/users/{selected_user}": {
    "get": {
      "users": "get"
    }
  },
  "/users/{selected_user}/hooks": {
    "get": {
      "users": "listWebhooks",
      "webhooks": "listForUser"
    },
    "post": {
      "users": "createWebhook",
      "webhooks": "createForUser"
    }
  },
  "/users/{selected_user}/hooks/{uid}": {
    "delete": {
      "users": "deleteWebhook",
      "webhooks": "deleteForUser"
    },
    "get": {
      "users": "getWebhook",
      "webhooks": "getForUser"
    },
    "put": {
      "users": "updateWebhook",
      "webhooks": "updateForUser"
    }
  },
  "/users/{selected_user}/pipelines_config/variables/": {
    "get": {
      "pipelines": "listVariablesForUser",
      "users": "listPipelineVariables"
    },
    "post": {
      "pipelines": "createVariableForUser",
      "users": "createPipelineVariable"
    }
  },
  "/users/{selected_user}/pipelines_config/variables/{variable_uuid}": {
    "delete": {
      "pipelines": "deleteVariableForUser",
      "users": "deletePipelineVariable"
    },
    "get": {
      "pipelines": "getVariableForUser",
      "users": "getPipelineVariable"
    },
    "put": {
      "pipelines": "updateVariableForUser",
      "users": "updatePipelineVariable"
    }
  },
  "/users/{selected_user}/properties/{app_key}/{property_name}": {
    "delete": {
      "properties": "deleteUserHostedPropertyValue",
      "users": "deleteUserHostedPropertyValue"
    },
    "get": {
      "properties": "retrieveUserHostedPropertyValue",
      "users": "retrieveUserHostedPropertyValue"
    },
    "put": {
      "properties": "updateUserHostedPropertyValue",
      "users": "updateUserHostedPropertyValue"
    }
  },
  "/users/{selected_user}/search/code": {
    "get": {
      "search": "codeOfUser",
      "users": "searchCode"
    }
  },
  "/users/{selected_user}/ssh-keys": {
    "get": {
      "ssh": "listKeys",
      "users": "listSshKeys"
    },
    "post": {
      "ssh": "createKey",
      "users": "createSshKey"
    }
  },
  "/users/{selected_user}/ssh-keys/{key_id}": {
    "delete": {
      "ssh": "deleteKey",
      "users": "deleteSshKey"
    },
    "get": {
      "ssh": "getKey",
      "users": "getSshKey"
    },
    "put": {
      "ssh": "updateKey",
      "users": "updateSshKey"
    }
  },
  "/users/{username}/members": {
    "get": {
      "teams": "getMembers",
      "users": "getTeamMembers"
    }
  },
  "/users/{workspace}/repositories": {
    "get": {
      "teams": "listRepositoriesForUser",
      "users": "listRepositories"
    }
  },
  "/workspaces": {
    "get": {
      "workspaces": "getWorkspaces"
    }
  },
  "/workspaces/{workspace}": {
    "get": {
      "workspaces": "getWorkspace"
    }
  },
  "/workspaces/{workspace}/hooks": {
    "get": {
      "webhooks": "getWebhooksForWorkspace",
      "workspaces": "getWebhooksForWorkspace"
    },
    "post": {
      "webhooks": "createWebhookForWorkspace",
      "workspaces": "createWebhookForWorkspace"
    }
  },
  "/workspaces/{workspace}/hooks/{uid}": {
    "delete": {
      "webhooks": "deleteWebhookForWorkspace",
      "workspaces": "deleteWebhookForWorkspace"
    },
    "get": {
      "webhooks": "getWebhookForWorkspace",
      "workspaces": "getWebhookForWorkspace"
    },
    "put": {
      "webhooks": "updateWebhookForWorkspace",
      "workspaces": "updateWebhookForWorkspace"
    }
  },
  "/workspaces/{workspace}/members": {
    "get": {
      "workspaces": "getMembersForWorkspace"
    }
  },
  "/workspaces/{workspace}/members/{member}": {
    "get": {
      "workspaces": "getMemberForWorkspace"
    }
  },
  "/workspaces/{workspace}/permissions": {
    "get": {
      "workspaces": ""
    }
  },
  "/workspaces/{workspace}/permissions/repositories": {
    "get": {
      "workspaces": ""
    }
  },
  "/workspaces/{workspace}/permissions/repositories/{repo_slug}": {
    "get": {
      "workspaces": ""
    }
  },
  "/workspaces/{workspace}/pipelines-config/identity/oidc/.well-known/openid-configuration": {
    "get": {
      "workspaces": ""
    }
  },
  "/workspaces/{workspace}/pipelines-config/identity/oidc/keys.json": {
    "get": {
      "workspaces": ""
    }
  },
  "/workspaces/{workspace}/pipelines-config/variables": {
    "get": {
      "pipelines": "getPipelineVariablesForWorkspace",
      "workspaces": "getPipelineVariablesForWorkspace"
    },
    "post": {
      "pipelines": "createPipelineVariableForWorkspace",
      "workspaces": "createPipelineVariableForWorkspace"
    }
  },
  "/workspaces/{workspace}/pipelines-config/variables/{variable_uuid}": {
    "delete": {
      "pipelines": "deletePipelineVariableForWorkspace",
      "workspaces": "deletePipelineVariableForWorkspace"
    },
    "get": {
      "pipelines": "getPipelineVariableForWorkspace",
      "workspaces": "getPipelineVariableForWorkspace"
    },
    "put": {
      "pipelines": "updatePipelineVariableForWorkspace",
      "workspaces": "updatePipelineVariableForWorkspace"
    }
  },
  "/workspaces/{workspace}/projects": {
    "get": {
      "workspaces": "getProjects"
    },
    "post": {
      "projects": "createProject",
      "workspaces": "createProject"
    }
  },
  "/workspaces/{workspace}/projects/{project_key}": {
    "delete": {
      "projects": "deleteProject",
      "workspaces": "deleteProject"
    },
    "get": {
      "projects": "getProject",
      "workspaces": "getProject"
    },
    "put": {
      "projects": "createOrUpdateProject",
      "workspaces": "createOrUpdateProject"
    }
  },
  "/workspaces/{workspace}/search/code": {
    "get": {
      "search": "searchAccount",
      "workspaces": "searchAccount"
    }
  }
}
